{"repository": "spring-projects/spring-retry", "language": "java", "clone_url": "https://github.com/spring-projects/spring-retry.git", "collection_timestamp": "2023-11-23T06:56:26.565511Z", "commit_hash": "e6091f790c64394508591052f962b833e2459346", "commit_message": "GH-340: Fix delayExpression w/ FixedBackOffPolicy\n\nResolves https://github.com/spring-projects/spring-retry/issues/340\r\n\r\nRuntime evaluation of `delayExpression` with a `FixedBackOffPolicy`\r\nwas not implemented causing the expression to be ignored.", "commit_timestamp": "2023-05-17T15:37:06Z", "previous_commit_hash": "cfa5550e9cce149a569ad71eeeec374f36137a9b", "previous_commit_message": "Next development version (v2.0.2-SNAPSHOT)\n", "previous_commit_timestamp": "2023-03-20T17:41:20Z", "time_to_patch": "57 days, 21:55:46", "bug_patch": "diff --git a/src/main/java/org/springframework/retry/backoff/BackOffPolicyBuilder.java b/src/main/java/org/springframework/retry/backoff/BackOffPolicyBuilder.java\nindex da1dd8c..72c9185 100644\n--- a/src/main/java/org/springframework/retry/backoff/BackOffPolicyBuilder.java\n+++ b/src/main/java/org/springframework/retry/backoff/BackOffPolicyBuilder.java\n@@ -267,7 +267,10 @@ public class BackOffPolicyBuilder {\n \t\t\treturn policy;\n \t\t}\n \t\tFixedBackOffPolicy policy = new FixedBackOffPolicy();\n-\t\tif (this.delay != null) {\n+\t\tif (this.delaySupplier != null) {\n+\t\t\tpolicy.backOffPeriodSupplier(this.delaySupplier);\n+\t\t}\n+\t\telse if (this.delay != null) {\n \t\t\tpolicy.setBackOffPeriod(this.delay);\n \t\t}\n \t\tif (this.sleeper != null) {\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/org/springframework/retry/annotation/EnableRetryTests.java b/src/test/java/org/springframework/retry/annotation/EnableRetryTests.java\nindex 8023263..50fd2ed 100644\n--- a/src/test/java/org/springframework/retry/annotation/EnableRetryTests.java\n+++ b/src/test/java/org/springframework/retry/annotation/EnableRetryTests.java\n@@ -37,6 +37,7 @@ import org.springframework.retry.RetryCallback;\n import org.springframework.retry.RetryContext;\n import org.springframework.retry.RetryListener;\n import org.springframework.retry.backoff.ExponentialBackOffPolicy;\n+import org.springframework.retry.backoff.FixedBackOffPolicy;\n import org.springframework.retry.backoff.Sleeper;\n import org.springframework.retry.interceptor.RetryInterceptorBuilder;\n import org.springframework.retry.policy.SimpleRetryPolicy;\n@@ -257,6 +258,11 @@ public class EnableRetryTests {\n \t\tassertThat(retryPolicy.getMaxAttempts()).isEqualTo(5);\n \t\tservice.service4();\n \t\tassertThat(service.getCount()).isEqualTo(11);\n+\t\tinterceptor = delegates.get(target(service)).get(ExpressionService.class.getDeclaredMethod(\"service4\"));\n+\t\ttemplate = (RetryTemplate) new DirectFieldAccessor(interceptor).getPropertyValue(\"retryOperations\");\n+\t\ttemplateAccessor = new DirectFieldAccessor(template);\n+\t\tFixedBackOffPolicy fbp = (FixedBackOffPolicy) templateAccessor.getPropertyValue(\"backOffPolicy\");\n+\t\tassertThat(fbp.getBackOffPeriod()).isEqualTo(5000L);\n \t\tservice.service5();\n \t\tassertThat(service.getCount()).isEqualTo(12);\n \t\tcontext.close();\n@@ -762,7 +768,8 @@ public class EnableRetryTests {\n \t\t\t}\n \t\t}\n \n-\t\t@Retryable(exceptionExpression = \"message.contains('this can be retried')\")\n+\t\t@Retryable(exceptionExpression = \"message.contains('this can be retried')\",\n+\t\t\t\tbackoff = @Backoff(delayExpression = \"5000\"))\n \t\tpublic void service4() {\n \t\t\tif (this.count++ < 10) {\n \t\t\t\tthrow new RuntimeException(\"this can be retried\");\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.244, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry{Service}", "time": 2.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.128, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 0.785, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.857, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.071, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultipier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.05, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.684, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[1]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[2]", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[3]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[4]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[7]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[9]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[1]", "time": 0.054, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[2]", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[3]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[4]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[5]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[8]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[9]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.188, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.249, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOnError", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.15, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.097, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.161, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.644, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[1]", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[2]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.508, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.142, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.771, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.081, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/90047867-11f2-424f-879f-d2324ba93e84/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "3c9055c6-35de-4f01-95c5-771dfb5ecf15", "build_tool": "maven", "elapsed_time": 133.47254300117493, "default_actions": true}], [{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.345, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry{Service}", "time": 2.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.147, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.044, "results": [{"result": "Failure", "message": "\nexpected: 5000L\n but was: 1000L", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 0.619, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.85, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultipier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.463, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[1]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[2]", "time": 0.031, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[4]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[7]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[9]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[1]", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[2]", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[3]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[4]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[8]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[9]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.202, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.251, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOpen", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.12, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.562, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[1]", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[2]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.509, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.132, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.899, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/90047867-11f2-424f-879f-d2324ba93e84/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "3c526e2a-4c12-4118-8c1d-8146402ae38b", "build_tool": "maven", "elapsed_time": 151.2547001838684, "default_actions": true}], [{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.413, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry{Service}", "time": 2.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.086, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 0.438, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.97, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultipier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.541, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[2]", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[4]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[7]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy{RetryPolicy}[9]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[1]", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[2]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[3]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[4]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[8]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext{RetryPolicy}[9]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.202, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.251, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOnError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.079, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.062, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.098, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.367, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[1]", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[2]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext{BackOffPolicy}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.508, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.245, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.701, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.045, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/90047867-11f2-424f-879f-d2324ba93e84/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "e8c6fc23-9640-4202-b303-ad4fa6912e46", "build_tool": "maven", "elapsed_time": 150.18114805221558, "default_actions": true}]], "strategy": "PASS_PASS", "issues": []}
{"repository": "spring-projects/spring-retry", "language": "java", "clone_url": "https://github.com/spring-projects/spring-retry.git", "collection_timestamp": "2023-11-23T07:00:54.847724Z", "commit_hash": "c89b9516d9763cbb97689071dc4c8dc50090bf1e", "commit_message": "GH-386: Restore interrupted thread status\n\nFixes https://github.com/spring-projects/spring-retry/issues/386\r\n\r\n* Update author and copyright\r\n\r\n**Cherry-pick to `1.3.x`**", "commit_timestamp": "2023-10-19T15:28:22Z", "previous_commit_hash": "6af7bc0eeb7ba0c3d5d540571f75d3f1f15a461c", "previous_commit_message": "Next development version (v2.0.5-SNAPSHOT)\n", "previous_commit_timestamp": "2023-10-16T11:55:55Z", "time_to_patch": "3 days, 3:32:27", "bug_patch": "diff --git a/src/main/java/org/springframework/retry/backoff/ExponentialBackOffPolicy.java b/src/main/java/org/springframework/retry/backoff/ExponentialBackOffPolicy.java\nindex 194f7d4..bd1f71c 100644\n--- a/src/main/java/org/springframework/retry/backoff/ExponentialBackOffPolicy.java\n+++ b/src/main/java/org/springframework/retry/backoff/ExponentialBackOffPolicy.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -41,6 +41,7 @@ import org.springframework.util.ClassUtils;\n  * @author Dave Syer\n  * @author Gary Russell\n  * @author Artem Bilan\n+ * @author Marius Lichtblau\n  */\n @SuppressWarnings(\"serial\")\n public class ExponentialBackOffPolicy implements SleepingBackOffPolicy<ExponentialBackOffPolicy> {\n@@ -245,6 +246,7 @@ public class ExponentialBackOffPolicy implements SleepingBackOffPolicy<Exponenti\n \t\t\tthis.sleeper.sleep(sleepTime);\n \t\t}\n \t\tcatch (InterruptedException e) {\n+\t\t\tThread.currentThread().interrupt();\n \t\t\tthrow new BackOffInterruptedException(\"Thread interrupted while sleeping\", e);\n \t\t}\n \t}\ndiff --git a/src/main/java/org/springframework/retry/backoff/FixedBackOffPolicy.java b/src/main/java/org/springframework/retry/backoff/FixedBackOffPolicy.java\nindex db12bb9..fc26986 100644\n--- a/src/main/java/org/springframework/retry/backoff/FixedBackOffPolicy.java\n+++ b/src/main/java/org/springframework/retry/backoff/FixedBackOffPolicy.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -31,6 +31,7 @@ import org.springframework.util.Assert;\n  * @author Rob Harrop\n  * @author Dave Syer\n  * @author Artem Bilan\n+ * @author Marius Lichtblau\n  */\n public class FixedBackOffPolicy extends StatelessBackOffPolicy implements SleepingBackOffPolicy<FixedBackOffPolicy> {\n \n@@ -97,6 +98,7 @@ public class FixedBackOffPolicy extends StatelessBackOffPolicy implements Sleepi\n \t\t\tsleeper.sleep(this.backOffPeriod.get());\n \t\t}\n \t\tcatch (InterruptedException e) {\n+\t\t\tThread.currentThread().interrupt();\n \t\t\tthrow new BackOffInterruptedException(\"Thread interrupted while sleeping\", e);\n \t\t}\n \t}\ndiff --git a/src/main/java/org/springframework/retry/backoff/UniformRandomBackOffPolicy.java b/src/main/java/org/springframework/retry/backoff/UniformRandomBackOffPolicy.java\nindex ef696d8..68249f7 100644\n--- a/src/main/java/org/springframework/retry/backoff/UniformRandomBackOffPolicy.java\n+++ b/src/main/java/org/springframework/retry/backoff/UniformRandomBackOffPolicy.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -32,6 +32,7 @@ import org.springframework.util.Assert;\n  * @author Rob Harrop\n  * @author Dave Syer\n  * @author Tomaz Fernandes\n+ * @author Marius Lichtblau\n  */\n public class UniformRandomBackOffPolicy extends StatelessBackOffPolicy\n \t\timplements SleepingBackOffPolicy<UniformRandomBackOffPolicy> {\n@@ -138,6 +139,7 @@ public class UniformRandomBackOffPolicy extends StatelessBackOffPolicy\n \t\t\tthis.sleeper.sleep(min + delta);\n \t\t}\n \t\tcatch (InterruptedException e) {\n+\t\t\tThread.currentThread().interrupt();\n \t\t\tthrow new BackOffInterruptedException(\"Thread interrupted while sleeping\", e);\n \t\t}\n \t}\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/org/springframework/retry/backoff/ExponentialBackOffPolicyTests.java b/src/test/java/org/springframework/retry/backoff/ExponentialBackOffPolicyTests.java\nindex ab63a4f..294203d 100644\n--- a/src/test/java/org/springframework/retry/backoff/ExponentialBackOffPolicyTests.java\n+++ b/src/test/java/org/springframework/retry/backoff/ExponentialBackOffPolicyTests.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,11 +19,13 @@ package org.springframework.retry.backoff;\n import org.junit.jupiter.api.Test;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n \n /**\n  * @author Rob Harrop\n  * @author Dave Syer\n  * @author Gary Russell\n+ * @author Marius Lichtblau\n  */\n public class ExponentialBackOffPolicyTests {\n \n@@ -92,4 +94,18 @@ public class ExponentialBackOffPolicyTests {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInterruptedStatusIsRestored() {\n+\t\tExponentialBackOffPolicy strategy = new ExponentialBackOffPolicy();\n+\t\tstrategy.setSleeper(new Sleeper() {\n+\t\t\t@Override\n+\t\t\tpublic void sleep(long backOffPeriod) throws InterruptedException {\n+\t\t\t\tthrow new InterruptedException(\"foo\");\n+\t\t\t}\n+\t\t});\n+\t\tBackOffContext context = strategy.start(null);\n+\t\tassertThatExceptionOfType(BackOffInterruptedException.class).isThrownBy(() -> strategy.backOff(context));\n+\t\tassertThat(Thread.interrupted()).isTrue();\n+\t}\n+\n }\ndiff --git a/src/test/java/org/springframework/retry/backoff/FixedBackOffPolicyTests.java b/src/test/java/org/springframework/retry/backoff/FixedBackOffPolicyTests.java\nindex 5ca7091..f57c1e7 100644\n--- a/src/test/java/org/springframework/retry/backoff/FixedBackOffPolicyTests.java\n+++ b/src/test/java/org/springframework/retry/backoff/FixedBackOffPolicyTests.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,11 +19,13 @@ package org.springframework.retry.backoff;\n import org.junit.jupiter.api.Test;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n \n /**\n  * @author Rob Harrop\n  * @author Dave Syer\n  * @author Gary Russell\n+ * @author Marius Lichtblau\n  * @since 2.1\n  */\n public class FixedBackOffPolicyTests {\n@@ -65,4 +67,19 @@ public class FixedBackOffPolicyTests {\n \t\tassertThat(sleeper.getBackOffs().length).isEqualTo(10);\n \t}\n \n+\t@Test\n+\tpublic void testInterruptedStatusIsRestored() {\n+\t\tint backOffPeriod = 50;\n+\t\tFixedBackOffPolicy strategy = new FixedBackOffPolicy();\n+\t\tstrategy.setBackOffPeriod(backOffPeriod);\n+\t\tstrategy.setSleeper(new Sleeper() {\n+\t\t\t@Override\n+\t\t\tpublic void sleep(long backOffPeriod) throws InterruptedException {\n+\t\t\t\tthrow new InterruptedException(\"foo\");\n+\t\t\t}\n+\t\t});\n+\t\tassertThatExceptionOfType(BackOffInterruptedException.class).isThrownBy(() -> strategy.backOff(null));\n+\t\tassertThat(Thread.interrupted()).isTrue();\n+\t}\n+\n }\ndiff --git a/src/test/java/org/springframework/retry/backoff/UniformRandomBackOffPolicyTests.java b/src/test/java/org/springframework/retry/backoff/UniformRandomBackOffPolicyTests.java\nindex 1dd3095..0ea1838 100644\n--- a/src/test/java/org/springframework/retry/backoff/UniformRandomBackOffPolicyTests.java\n+++ b/src/test/java/org/springframework/retry/backoff/UniformRandomBackOffPolicyTests.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2006-2022 the original author or authors.\n+ * Copyright 2006-2023 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,10 +19,12 @@ package org.springframework.retry.backoff;\n import org.junit.jupiter.api.Test;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n \n /**\n  * @author Tomaz Fernandes\n  * @author Gary Russell\n+ * @author Marius Lichtblau\n  * @since 1.3.2\n  */\n public class UniformRandomBackOffPolicyTests {\n@@ -40,4 +42,22 @@ public class UniformRandomBackOffPolicyTests {\n \t\tassertThat(withSleeper.getMaxBackOffPeriod()).isEqualTo(maxBackOff);\n \t}\n \n+\t@Test\n+\tpublic void testInterruptedStatusIsRestored() {\n+\t\tUniformRandomBackOffPolicy backOffPolicy = new UniformRandomBackOffPolicy();\n+\t\tint minBackOff = 1000;\n+\t\tint maxBackOff = 10000;\n+\t\tbackOffPolicy.setMinBackOffPeriod(minBackOff);\n+\t\tbackOffPolicy.setMaxBackOffPeriod(maxBackOff);\n+\t\tUniformRandomBackOffPolicy withSleeper = backOffPolicy.withSleeper(new Sleeper() {\n+\t\t\t@Override\n+\t\t\tpublic void sleep(long backOffPeriod) throws InterruptedException {\n+\t\t\t\tthrow new InterruptedException(\"foo\");\n+\t\t\t}\n+\t\t});\n+\n+\t\tassertThatExceptionOfType(BackOffInterruptedException.class).isThrownBy(() -> withSleeper.backOff(null));\n+\t\tassertThat(Thread.interrupted()).isTrue();\n+\t}\n+\n }\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.081, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.449, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "real service called\nrecovery action\n\nreal service called\nrecovery action\n\nreal service called\nrecovery action\n\nrecovery action\n\n6000 ms after last failure\nrecovery action\n\n12002 ms after last failure\nrecovery action\n\n18003 ms after last failure\nreal service called\n\n", "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.352, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry(Service)", "time": 2.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithoutParam", "time": 0.054, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.064, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithParam", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.052, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "exponential", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponential", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "type", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "vanilla", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponentialExpression", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 1.534, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testConstructorWithCustomTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.803, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Ran 10000 backoff trials.  Each trial retried 6 times\nPolicy: ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]\nAll generated backoffs:\n    [74.0, 99.80000000000109, 149.0, 199.60000000000218, 300.0, 399.3999999999978, 600.0, 799.2000000000044, 1205.0]\nBackoff frequencies:\n    [74.0, 99.80000000000109, 149.0, 199.60000000000218, 300.0, 399.3999999999978, 600.0, 799.2000000000044, 1205.0]", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]: sleeps=[53, 190, 394, 475, 1355]\n", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=3000, multiplier=2.0, maxInterval=3000]: sleeps=[3000, 3000, 3000, 3000, 3000]\n", "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.064, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultiplier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOffDuration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutMillis", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoffDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialRandomBackoffDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoffDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.057, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.456, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpen", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "noExceptionOnError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[1]", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 06:55:22,358  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:55:22,370  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:55:22,376  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[2]", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[3]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[4]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[8]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[9]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[1]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 06:55:22,513  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:55:22,517  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:55:22,519  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[2]", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[3]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[4]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[8]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[9]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.052, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.203, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.253, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.158, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testClear", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusRegistration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusIsStoredByTemplate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTermination", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRetryOnBadResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSpecificExceptionRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testFailedPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoBackOffForRethrownException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInterrupted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNestedContexts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoSuccessRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSetExceptions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRethrowError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithoutParam", "time": 0.272, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "multipleMethods", "time": 0.156, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludesOnly", "time": 0.071, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "runtimeExpressions", "time": 0.089, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "marker", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recovery", "time": 0.054, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExternalInterceptor", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "proxyTargetClass", "time": 2.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "type", "time": 0.06, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithParam", "time": 0.076, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "order", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "vanilla", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testImplementation", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterface", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "stateful", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExpression", "time": 0.064, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludes", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterfaceWithNoRecover", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.507, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.141, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=1500: [100, 200, 400, 800]\nPercentiles:       [100.0, 100.0, 200.0, 200.0, 300.0, 400.0, 400.0, 800.0, 800.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.799, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialRandomBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=2964: [177, 392, 799, 1596]\nPercentiles:       [139.0, 179.0, 239.0, 320.0, 399.5, 558.0, 719.0, 957.0, 1284.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.079, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "FixedBackOffPolicy[backOffPeriod=400]\nLongest sequence  totalSleep=1600: [400, 400, 400, 400]\nPercentiles:       [400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0]\n", "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/3d4f7416-da72-465c-9b7d-bab6103f1c0e/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "5a1a02c6-1801-4459-b69a-abc6c2cb17db", "build_tool": "maven", "elapsed_time": 144.7067368030548, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.119, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.72, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "real service called\nrecovery action\n\nreal service called\nrecovery action\n\nreal service called\nrecovery action\n\nrecovery action\n\n6000 ms after last failure\nrecovery action\n\n12002 ms after last failure\nrecovery action\n\n18002 ms after last failure\nreal service called\n\n", "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.383, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry(Service)", "time": 2.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithoutParam", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithParam", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.074, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.082, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "exponential", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponential", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "type", "time": 0.045, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "vanilla", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponentialExpression", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 1.392, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testConstructorWithCustomTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.708, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Ran 10000 backoff trials.  Each trial retried 6 times\nPolicy: ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]\nAll generated backoffs:\n    [75.0, 99.80000000000109, 148.0, 199.60000000000218, 299.0, 399.3999999999978, 599.0, 799.2000000000044, 1206.0]\nBackoff frequencies:\n    [75.0, 99.80000000000109, 148.0, 199.60000000000218, 299.0, 399.3999999999978, 599.0, 799.2000000000044, 1206.0]", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]: sleeps=[89, 138, 299, 416, 1143]\n", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=3000, multiplier=2.0, maxInterval=3000]: sleeps=[3000, 3000, 3000, 3000, 3000]\n", "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.004, "results": [{"result": "Failure", "message": "\nExpecting value to be true but was false", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.001, "results": [{"result": "Failure", "message": "\nExpecting value to be true but was false", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.11, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultiplier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOffDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutMillis", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoffDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialRandomBackoffDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoffDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.393, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testClose", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpen", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "noExceptionOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[1]", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 06:58:02,703  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:58:02,712  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:58:02,717  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[2]", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[4]", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[7]", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[9]", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[1]", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 06:58:02,919  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:58:02,921  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 06:58:02,922  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[2]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[3]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[4]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[9]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.077, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.203, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.254, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.05, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.175, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testClear", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSpecificExceptionRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testFailedPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoBackOffForRethrownException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInterrupted", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNestedContexts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoSuccessRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSetExceptions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithoutParam", "time": 0.208, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "multipleMethods", "time": 0.148, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludesOnly", "time": 0.093, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "runtimeExpressions", "time": 0.114, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "marker", "time": 0.067, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recovery", "time": 0.061, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExternalInterceptor", "time": 0.076, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "proxyTargetClass", "time": 2.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "type", "time": 0.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithParam", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "order", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "vanilla", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testImplementation", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterface", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "stateful", "time": 0.063, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExpression", "time": 0.15, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludes", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterfaceWithNoRecover", "time": 0.057, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.504, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.113, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=1500: [100, 200, 400, 800]\nPercentiles:       [100.0, 100.0, 200.0, 200.0, 300.0, 400.0, 400.0, 800.0, 800.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.64, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialRandomBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=2902: [177, 367, 782, 1576]\nPercentiles:       [139.0, 179.0, 240.0, 319.0, 399.5, 562.0, 721.0, 960.0, 1286.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.071, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "FixedBackOffPolicy[backOffPeriod=400]\nLongest sequence  totalSleep=1600: [400, 400, 400, 400]\nPercentiles:       [400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0]\n", "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.105, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.005, "results": [{"result": "Failure", "message": "\nExpecting value to be true but was false", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/3d4f7416-da72-465c-9b7d-bab6103f1c0e/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "89e84732-1212-455c-ae8a-71072383732f", "build_tool": "maven", "elapsed_time": 148.14064383506775, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteListWithTraverseCauses", "time": 0.093, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testFailOnNotationMix", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testWhiteList", "time": 0.65, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierBuilderTests", "name": "testBlackList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionString", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.ExhaustedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.PrototypeBeanTests", "name": "testProtoBean", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.AlwaysRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerResetTimeoutTests", "name": "circuitBreakerShouldBeClosedAfterResetTimeout", "time": 18.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "real service called\nrecovery action\n\nreal service called\nrecovery action\n\nreal service called\nrecovery action\n\nrecovery action\n\n6000 ms after last failure\nrecovery action\n\n12002 ms after last failure\nrecovery action\n\n18003 ms after last failure\nreal service called\n\n", "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testIllegalMethodInvocationType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRetryListenerInspectingTheMethodInvocation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testOutsideTransaction", "time": 0.387, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttempts", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "abortCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "oldValuesDecay", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "completeCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "attributes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "startedCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "pointless", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "errorCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.ExponentialAverageRetryStatisticsTests", "name": "recoveryCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWitCustomRetryPolicyTraverseCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testBasic", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomKeyGenerator", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomizedBackOffMoreAttempts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomRetryTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.RetryInterceptorBuilderTests", "name": "testWithCustomNewMessageIdentifier", "time": 1.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testPut", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SoftReferenceMapRetryContextCacheTests", "name": "testRemove", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.RetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.DontRetryRecovererTests", "name": "dontRetry(Service)", "time": 2.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testClear", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusRegistration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testStatusIsStoredByTemplate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithoutParam", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "multipleMethods", "time": 0.054, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludesOnly", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "runtimeExpressions", "time": 0.057, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "marker", "time": 0.07, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recovery", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExternalInterceptor", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "proxyTargetClass", "time": 2.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "type", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "recoveryWithParam", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "order", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "vanilla", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testImplementation", "time": 0.035, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterface", "time": 0.053, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "stateful", "time": 0.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testExpression", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "excludes", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryTests", "name": "testInterfaceWithNoRecover", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "exponential", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponential", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "type", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "vanilla", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffNoThreadLocalTests", "name": "randomExponentialExpression", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testClose", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpen", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOnErrorWithMethodInvocationRetryCallbackShouldCallDoOnErrorMethod", "time": 1.447, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testOpenWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithMethodInvocationRetryCallbackShouldCallDoCloseMethod", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.MethodInvocationRetryListenerSupportTests", "name": "testCloseWithRetryCallbackShouldntCallDoCloseMethod", "time": 0.07, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testConstructorWithCustomTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testTimeoutPreventsRetry", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.TimeoutRetryPolicyTests", "name": "testParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.782, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Ran 10000 backoff trials.  Each trial retried 6 times\nPolicy: ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]\nAll generated backoffs:\n    [74.0, 99.80000000000109, 149.0, 199.60000000000218, 299.0, 399.3999999999978, 599.0, 799.2000000000044, 1197.0]\nBackoff frequencies:\n    [74.0, 99.80000000000109, 149.0, 199.60000000000218, 299.0, 399.3999999999978, 599.0, 799.2000000000044, 1197.0]", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testSingleBackoff", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=50, multiplier=2.0, maxInterval=3000]: sleeps=[95, 170, 285, 541, 1175]\n", "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialRandomBackOffPolicyTests", "name": "testMaxInterval", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "Single trial of ExponentialRandomBackOffPolicy[initialInterval=3000, multiplier=2.0, maxInterval=3000]: sleeps=[3000, 3000, 3000, 3000, 3000]\n", "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessRecovery", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulRecovery", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulUnsuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessUnsuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatelessSuccessful", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.StatisticsListenerTests", "name": "testStatefulSuccessful", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyNullIsDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierSupportTests", "name": "testClassifyRandomException", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testSetSleeper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.UniformRandomBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMultiBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMaxInterval", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetMultiplier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testMaximumBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testSetInitialInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ExponentialBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithoutState", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.FatalExceptionRetryPolicyTests", "name": "testFatalExceptionWithState", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "vanilla", "time": 2.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithListenersTests", "name": "overrideListener", "time": 2.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testBasicCustomization", "time": 0.07, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateMeaninglessMultiplier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOffDuration", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutMillis", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnRetryPoliciesConflict", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testDefaultBehavior", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExpBackOffWithRandom", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testTimeoutDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateZeroInitInterval", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnEmptyExceptionClassifierRules", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testValidateInitAndMax", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnBackOffPolicyConflict", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testInfiniteRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoffDuration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialRandomBackoffDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testUniformRandomBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testExponentialBackoffDuration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testNoBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFixedBackoff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testCustomPolicy", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateBuilderTests", "name": "testFailOnNotationsMix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerInterceptorStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.477, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnError", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnErrorDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testClose", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpen", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptorsAfterRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "noExceptionOnError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testCloseInterceptors", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenInterceptors", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOnSuccessDefaultImplementation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenCanVetoRetry", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.listener.RetryListenerTests", "name": "testOpenDefaultImplementation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.DefaultRetryStateTests", "name": "testDefaultRetryStateObjectBooleanClassifierOfQsuperThrowableBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[1]", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 07:00:02,784  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 07:00:02,801  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 07:00:02,806  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[2]", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[4]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[5]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[7]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[8]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForPolicy(RetryPolicy)[9]", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[1]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "2023-11-23 07:00:03,025  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.BinaryExceptionClassifierRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 07:00:03,029  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExceptionClassifierRetryPolicy$ExceptionClassifierRetryContext.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n2023-11-23 07:00:03,033  WARN org.springframework.retry.policy.RetryContextSerializationTests [main] : Cannot create instance of org.springframework.retry.policy.ExpressionRetryPolicy\norg.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.retry.policy.ExpressionRetryPolicy]: Is it an abstract class?\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:112) ~[spring-beans-6.0.13.jar:6.0.13]\n\tat org.springframework.retry.policy.RetryContextSerializationTests.policies(RetryContextSerializationTests.java:62) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727) ~[junit-platform-commons-1.9.3.jar:1.9.3]\n\tat org.junit.jupiter.engine.execution.DefaultExecutableInvoker.invoke(DefaultExecutableInvoker.java:55) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.params.provider.MethodArgumentsProvider.lambda$provideArguments$2(MethodArgumentsProvider.java:60) ~[junit-jupiter-params-5.9.3.jar:5.9.3]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276) ~[?:?]\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44) ~[junit-jupiter-engine-5.9.3.jar:5.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat java.util.ArrayList.forEach(ArrayList.java:1511) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55) ~[junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.9.3.jar:1.9.3]\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122) [surefire-junit-platform-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507) [surefire-booter-3.0.0.jar:3.0.0]\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495) [surefire-booter-3.0.0.jar:3.0.0]\nCaused by: java.lang.InstantiationException: org.springframework.retry.policy.ExpressionRetryPolicy\n\tat java.lang.Class.newInstance(Class.java:639) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\nCaused by: java.lang.NoSuchMethodException: org.springframework.retry.policy.ExpressionRetryPolicy.<init>()\n\tat java.lang.Class.getConstructor0(Class.java:3585) ~[?:?]\n\tat java.lang.Class.newInstance(Class.java:626) ~[?:?]\n\tat org.springframework.beans.BeanUtils.instantiate(BeanUtils.java:109) ~[spring-beans-6.0.13.jar:6.0.13]\n\t... 86 more\n", "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[2]", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[3]", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[4]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[5]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[8]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.RetryContextSerializationTests", "name": "testSerializationCycleForContext(RetryPolicy)[9]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateUniformRandomBackOffPolicy", "time": 0.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateExponentialRandomBackOff", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateFixedBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicyViaNewBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicyBuilderTests", "name": "shouldCreateDefaultBackOffPolicy", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "runtimeExpressions", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.CircuitBreakerTests", "name": "vanilla", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenDelegateNotRetryable", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitClosesAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testCircuitOpensWhenRetryPolicyFirstTimeAttributeCircuitOpenNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CircuitBreakerRetryTemplateTests", "name": "testWindowResetsAfterTimeout", "time": 0.201, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExponentialBackOffIsExponential", "time": 0.254, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetryWhenKeyIsNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetryAndSerializedContext", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithFailAndNoRetry", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.StatefulRetryIntegrationTests", "name": "testExternalRetryWithSuccessOnRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testRetryCount", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testEmptyPolicies", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testOptimistic", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesWithThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testNonTrivialPoliciesClose", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testParent", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.CompositeRetryPolicyTests", "name": "testExceptionOnPoliciesClose", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch2", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySubclassMatch", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNullNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifyAncestorMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassExceptionClassifierTests", "name": "testClassifySuperclassDoesNotMatch", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectWithNoAnnotation", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterClassifier", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObjectSingleMethodWithNoAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifierAdapterObject", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithSetter", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithClassifier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.ClassifierAdapterTests", "name": "testClassifyWithWrongType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testCreateFromMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.PatternMatchingClassifierTests", "name": "testSetPatternMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.ThreadWaitSleeperTests", "name": "testSingleBackOff", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWhenNotRetryable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testCircuitOpenWithNoRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.stats.CircuitBreakerStatisticsTests", "name": "testFailedRecoveryCountsAsAbort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRegisterThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testSwitchToStatelessForNoRollback", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testClose", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacity", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testKeyGeneratorNotConsistentAfterFailure", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testCacheCapacityNotReachedIfRecovered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testRecover", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testExhaustedClearsHistoryAfterLastAttempt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.StatefulRecoveryRetryTests", "name": "testOpenSunnyDay", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRetryExceptionAfterTooManyAttemptsWithNoRecovery", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorAndRawKey", "time": 0.176, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testKeyGeneratorReturningNull", "time": 0.066, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testInterceptorChainWithRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultTransformerInterceptorSunnyDay", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerWithSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testDefaultInterceptorWithLabel", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.interceptor.StatefulRetryOperationsInterceptorTests", "name": "testTransformerRecoveryAfterTooManyAttempts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testClear", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusRegistration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testStatusIsStoredByTemplate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySynchronizationManagerNoThreadLocalTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "exponential", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponential", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "type", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "vanilla", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryWithBackoffTests", "name": "randomExponentialExpression", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRetryOnBadResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSpecificExceptionRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testFailedPolicy", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoBackOffForRethrownException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRecovery", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInterrupted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNestedContexts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testNoSuccessRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testSetExceptions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testRethrowError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateNoThreadLocalTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithoutParam", "time": 0.204, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "multipleMethods", "time": 0.104, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludesOnly", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "runtimeExpressions", "time": 0.086, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "marker", "time": 0.096, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recovery", "time": 0.081, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExternalInterceptor", "time": 0.095, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "proxyTargetClass", "time": 2.05, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "type", "time": 0.097, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "recoveryWithParam", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "order", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "vanilla", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testImplementation", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterface", "time": 0.075, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "stateful", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testExpression", "time": 0.063, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "excludes", "time": 0.091, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.EnableRetryNoThreadLocalTests", "name": "testInterfaceWithNoRecover", "time": 0.094, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSingleMethodWithNoAnnotation", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testNoClassifiers", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testSetRouterDelegate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BackToBackPatternClassifierTests", "name": "testCreateFromConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefaultInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyNullIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatchInCause", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testTypesProvidedInConstructorWithNonDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyExactMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testDefaultProvided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testFalseIsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifyRandomException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.BinaryExceptionClassifierTests", "name": "testClassifySubclassMatchInCauseFalse", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testUncheckedRuntimeException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testCheckedException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.AnyThrowTests", "name": "testRuntimeException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testDefaultPolicies", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testRetryCount", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClose", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testTrivialPolicies", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testClassifierOperates", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullPolicies", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testParent", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.ExceptionClassifierRetryPolicyTests", "name": "testNullContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterface", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.classify.SubclassClassifierTests", "name": "testClassifyInterfaceOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeChildThrowableRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapIntegerStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inAccessibleRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noArgs", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "inheritanceOnArgumentClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "parentReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnTypesMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericSpecifiedReturnTypeRecoverMethod", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsReOrdered", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByRetryableNameWithPrimitiveArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsExtendsThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnStringValueTypeParentThrowableRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "defaultRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethods", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "fewerArgs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "specificReturnTypeRecoverMethod", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "recoverByComposedRetryableAnnotationName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericReturnOneValueTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericDirectMatchReturnTypeRecoverMethod", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "multipleQualifyingRecoverMethodsWithNoThrowable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "noMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.RecoverAnnotationRecoveryHandlerTests", "name": "genericNestedMapNumberStringReturnTypeRecoverMethod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.BackOffPolicySerializationTests", "name": "testSerializationCycleForContext(BackOffPolicy)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryCount", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitSubsequentState", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryLimitInitialState", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testFatalOverridesRetryable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testCanRetryIfNoException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testRetryableWithCause", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testWithExceptionDefaultAlwaysRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.SimpleRetryPolicyTests", "name": "testEmptyExceptionsNeverRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.annotation.ProxyApplicationTests", "name": "contextLoads", "time": 0.505, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesExponentialBackoff", "time": 0.142, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=1500: [100, 200, 400, 800]\nPercentiles:       [100.0, 100.0, 200.0, 200.0, 300.0, 400.0, 400.0, 800.0, 800.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesRandomExponentialBackoff", "time": 0.666, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "ExponentialRandomBackOffPolicy[initialInterval=100, multiplier=2.0, maxInterval=30000]\nLongest sequence  totalSleep=2927: [197, 398, 766, 1566]\nPercentiles:       [138.0, 179.0, 240.0, 319.0, 399.5, 559.0, 719.0, 963.0, 1287.0]\n", "stderr": null}, {"classname": "org.springframework.retry.support.RetrySimulationTests", "name": "testSimulatorExercisesFixedBackoff", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "FixedBackOffPolicy[backOffPeriod=400]\nLongest sequence  totalSleep=1600: [400, 400, 400, 400]\nPercentiles:       [400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0]\n", "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPutOverLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testPut", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.MapRetryContextCacheTests", "name": "testRemove", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTermination", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRetryOnBadResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSpecificExceptionRetry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testFailedPolicy", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRollbackClassifierOverridesRetryPolicy", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoBackOffForRethrownException", "time": 0.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRecovery", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testEarlyTerminationWithOriginalException", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testDefaultConfigWithExceptionSubclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInterrupted", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNestedContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testNoSuccessRetry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSuccessfulRetry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testSetExceptions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testRethrowError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testAlwaysTryAtLeastOnce", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.support.RetryTemplateTests", "name": "testBackOffInvoked", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testRetryCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testSimpleOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.policy.NeverRetryPolicyTests", "name": "testParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.TerminatedRetryExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSingleBackOff", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testSetBackoffPeriodNegative", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testInterruptedStatusIsRestored", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.backoff.FixedBackOffPolicyTests", "name": "testManyBackOffCalls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.springframework.retry.BackOffInterruptedExceptionTests", "name": "testExceptionStringThrowable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/3d4f7416-da72-465c-9b7d-bab6103f1c0e/.github/workflows/pr-build-workflow-crawler.yml", "type": "maven"}, "workflow_name": "8bfd4026-bf47-4609-a22f-0cc30a631049", "build_tool": "maven", "elapsed_time": 124.13779091835022, "default_actions": false}]], "strategy": "PASS_PASS", "issues": []}
