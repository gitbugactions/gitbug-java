{"repository": "AuthMe/ConfigMe", "language": "java", "clone_url": "https://github.com/AuthMe/ConfigMe.git", "collection_timestamp": "2023-11-24T10:44:22.758485Z", "commit_hash": "7bf10c51347958ead6d2d8d11e6077dbc35c980e", "commit_message": "#363 Detect conflicts with root-path property, validate property paths more strictly\n", "commit_timestamp": "2023-08-27T11:33:22Z", "previous_commit_hash": "cab40d1c3c13c43455226d0324de62b288dab544", "previous_commit_message": "Remove outdated dep. exclusion from POM\n- Mockito no longer has hamcrest as dependency\n", "previous_commit_timestamp": "2023-08-23T05:36:08Z", "time_to_patch": "4 days, 5:57:14", "bug_patch": "diff --git a/src/main/java/ch/jalu/configme/configurationdata/PropertyListBuilder.java b/src/main/java/ch/jalu/configme/configurationdata/PropertyListBuilder.java\nindex ea010a0..44ad63b 100644\n--- a/src/main/java/ch/jalu/configme/configurationdata/PropertyListBuilder.java\n+++ b/src/main/java/ch/jalu/configme/configurationdata/PropertyListBuilder.java\n@@ -11,7 +11,7 @@ import java.util.Map;\n \n /**\n  * Builds a list of known properties in an ordered and grouped manner.\n- *\n+ * <p>\n  * It guarantees that the added entries:\n  * <ul>\n  *   <li>are grouped by path, e.g. all \"DataSource.mysql\" properties are together, and \"DataSource.mysql\" properties\n@@ -24,7 +24,7 @@ import java.util.Map;\n  */\n public class PropertyListBuilder {\n \n-    private @NotNull Map<String, Object> rootEntries = new LinkedHashMap<>();\n+    private final @NotNull Map<String, Object> rootEntries = new LinkedHashMap<>();\n \n     /**\n      * Adds the property to the list builder.\n@@ -32,17 +32,16 @@ public class PropertyListBuilder {\n      * @param property the property to add\n      */\n     public void add(@NotNull Property<?> property) {\n-        String[] paths = property.getPath().split(\"\\\\.\");\n-        Map<String, Object> map = rootEntries;\n-        for (int i = 0; i < paths.length - 1; ++i) {\n-            map = getChildMap(map, paths[i]);\n-        }\n+        String[] pathElements = property.getPath().split(\"\\\\.\", -1);\n+        Map<String, Object> mapForProperty = getMapBeforeLastElement(pathElements);\n \n-        final String end = paths[paths.length - 1];\n-        if (map.containsKey(end)) {\n+        final String lastElement = pathElements[pathElements.length - 1];\n+        if (mapForProperty.containsKey(lastElement)) {\n             throw new ConfigMeException(\"Path at '\" + property.getPath() + \"' already exists\");\n+        } else if (pathElements.length > 1 && lastElement.equals(\"\")) {\n+            throwExceptionForMalformedPath(property.getPath());\n         }\n-        map.put(end, property);\n+        mapForProperty.put(lastElement, property);\n     }\n \n     /**\n@@ -54,9 +53,36 @@ public class PropertyListBuilder {\n     public @NotNull List<Property<?>> create() {\n         List<Property<?>> result = new ArrayList<>();\n         collectEntries(rootEntries, result);\n+        if (result.size() > 1 && rootEntries.containsKey(\"\")) {\n+            throw new ConfigMeException(\"A property at the root path (\\\"\\\") cannot be defined alongside \"\n+                + \"other properties as the paths would conflict\");\n+        }\n         return result;\n     }\n \n+    /**\n+     * Returns the nested map for the given path parts in which a property can be saved (for the last element\n+     * in the path parts). Throws an exception if the path is malformed.\n+     *\n+     * @param pathParts the path elements (i.e. the property path split by \".\")\n+     * @return the map to store the property in\n+     */\n+    protected @NotNull Map<String, Object> getMapBeforeLastElement(String @NotNull [] pathParts) {\n+        Map<String, Object> map = rootEntries;\n+        for (int i = 0; i < pathParts.length - 1; ++i) {\n+            map = getChildMap(map, pathParts[i]);\n+            if (pathParts[i].equals(\"\")) {\n+                throwExceptionForMalformedPath(String.join(\".\", pathParts));\n+            }\n+        }\n+        return map;\n+    }\n+\n+    protected void throwExceptionForMalformedPath(@NotNull String path) {\n+        throw new ConfigMeException(\"The path at '\" + path + \"' is malformed: dots may not be at the beginning or end \"\n+            + \"of a path, and dots may not appear multiple times successively.\");\n+    }\n+\n     protected final @NotNull Map<String, Object> getRootEntries() {\n         return rootEntries;\n     }\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/ch/jalu/configme/configurationdata/PropertyListBuilderTest.java b/src/test/java/ch/jalu/configme/configurationdata/PropertyListBuilderTest.java\nindex 3352f36..c7b2e4a 100644\n--- a/src/test/java/ch/jalu/configme/configurationdata/PropertyListBuilderTest.java\n+++ b/src/test/java/ch/jalu/configme/configurationdata/PropertyListBuilderTest.java\n@@ -4,10 +4,13 @@ import ch.jalu.configme.exception.ConfigMeException;\n import ch.jalu.configme.properties.Property;\n import ch.jalu.configme.properties.StringProperty;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n \n import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Stream;\n \n import static ch.jalu.configme.TestUtils.transform;\n import static org.hamcrest.MatcherAssert.assertThat;\n@@ -102,6 +105,54 @@ class PropertyListBuilderTest {\n         assertThat(properties.create(), hasSize(1));\n     }\n \n+    @Test\n+    void shouldSupportRootProperty() {\n+        // given\n+        PropertyListBuilder listBuilder = new PropertyListBuilder();\n+        Property<?> rootProperty = createPropertyWithPath(\"\");\n+        listBuilder.add(rootProperty);\n+\n+        // when\n+        List<Property<?>> properties = listBuilder.create();\n+\n+        // then\n+        assertThat(properties, contains(rootProperty));\n+    }\n+\n+    @Test\n+    void shouldThrowForRootPathAndOtherProperty() {\n+        // given\n+        PropertyListBuilder properties = new PropertyListBuilder();\n+        properties.add(createPropertyWithPath(\"\"));\n+        properties.add(createPropertyWithPath(\"enabled\"));\n+\n+        // when\n+        ConfigMeException ex = assertThrows(ConfigMeException.class, properties::create);\n+\n+        // then\n+        assertThat(ex.getMessage(),\n+            equalTo(\"A property at the root path (\\\"\\\") cannot be defined alongside other properties as the paths would conflict\"));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"malformedPropertyPaths\")\n+    void shouldThrowForMalformedPropertyPath(String path) {\n+        // given\n+        PropertyListBuilder properties = new PropertyListBuilder();\n+\n+        // when\n+        ConfigMeException ex = assertThrows(ConfigMeException.class,\n+            () -> properties.add(createPropertyWithPath(path)));\n+\n+        // then\n+        assertThat(ex.getMessage(), equalTo(\"The path at '\" + path + \"' is malformed: dots may not be at \"\n+            + \"the beginning or end of a path, and dots may not appear multiple times successively.\"));\n+    }\n+\n+    static Stream<String> malformedPropertyPaths() {\n+        return Stream.of(\".\", \"..\", \".security\", \"security.\", \"alf..beta\", \"security.hash..version.minor\");\n+    }\n+\n     private static Property<?> createPropertyWithPath(String path) {\n         return new StringProperty(path, \"\");\n     }\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldExportBooleans", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldMapToBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldGetFirstNonNullResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldRespectOrderOfTransformers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldCreateValuesWithLegacyConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 1.116, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.05, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.059, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.098, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomTypeHandlerTest", "name": "shouldLoadMap", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.096, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.031, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldMapToEnum", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldExportEnumValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnObjectClassAsReadClassForUnknownType", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFieldsWithTypeVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldDefineHashCodeFromType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleFieldsOfTypeVariable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHaveTypeInfoInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleClassFields", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnNullForTypesWithTooFewGenericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFieldsWithTypeVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldBaseEqualsOnWrappedType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotExportUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldHandleUnsupportedTypesWhenTransformingToBigIntegerOrBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigIntegerValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotHandleExtensionsOfBigNumberClasses", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformStringsToBigDecimalAndBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldReturnNullForNonBigNumberType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldMapToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldExportStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotExportOtherValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldExportNumbers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldExpandPathsWithPeriod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnWhetherToSplitDotPaths", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldOverrideEntriesOnClash", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDotsIfSoConfigured", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldNotExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldMapToObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.127, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.078, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotExportOtherValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldMapValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldReturnDefaultTransformerAsSingleton", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldExportValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotMapUnknownValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldCombineLeafValueHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughComments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/2fee7f4f-9072-4780-9d9d-7491fcf5e56b/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "954a77af-d532-45da-a978-21d2e5c4e13e", "build_tool": "maven", "elapsed_time": 104.61259198188782, "default_actions": false}], [{"failed": false, "tests": [{"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldExportBooleans", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldMapToBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldGetFirstNonNullResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldRespectOrderOfTransformers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldCreateValuesWithLegacyConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.057, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 1.28, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.059, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.261, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomTypeHandlerTest", "name": "shouldLoadMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.141, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldMapToEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldExportEnumValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[1]", "time": 0.012, "results": [{"result": "Failure", "message": "Unexpected exception type thrown, expected: <ch.jalu.configme.exception.ConfigMeException> but was: <java.lang.ArrayIndexOutOfBoundsException>", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[2]", "time": 0.003, "results": [{"result": "Failure", "message": "Unexpected exception type thrown, expected: <ch.jalu.configme.exception.ConfigMeException> but was: <java.lang.ArrayIndexOutOfBoundsException>", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[3]", "time": 0.002, "results": [{"result": "Failure", "message": "Expected ch.jalu.configme.exception.ConfigMeException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[4]", "time": 0.002, "results": [{"result": "Failure", "message": "Expected ch.jalu.configme.exception.ConfigMeException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[5]", "time": 0.002, "results": [{"result": "Failure", "message": "Expected ch.jalu.configme.exception.ConfigMeException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[6]", "time": 0.003, "results": [{"result": "Failure", "message": "Expected ch.jalu.configme.exception.ConfigMeException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForRootPathAndOtherProperty", "time": 0.002, "results": [{"result": "Failure", "message": "Expected ch.jalu.configme.exception.ConfigMeException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldSupportRootProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnObjectClassAsReadClassForUnknownType", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFieldsWithTypeVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldDefineHashCodeFromType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleFieldsOfTypeVariable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHaveTypeInfoInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleClassFields", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnNullForTypesWithTooFewGenericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleMapType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFieldsWithTypeVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldBaseEqualsOnWrappedType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotExportUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldHandleUnsupportedTypesWhenTransformingToBigIntegerOrBigDecimal", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigDecimal", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigIntegerValuesCorrectly", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotHandleExtensionsOfBigNumberClasses", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformStringsToBigDecimalAndBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldReturnNullForNonBigNumberType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldMapToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldExportStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotExportOtherValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldExportNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldExpandPathsWithPeriod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnWhetherToSplitDotPaths", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldOverrideEntriesOnClash", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDotsIfSoConfigured", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldNotExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldMapToObject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.031, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.233, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.121, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotExportOtherValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldMapValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldReturnDefaultTransformerAsSingleton", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldExportValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotMapUnknownValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldCombineLeafValueHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/2fee7f4f-9072-4780-9d9d-7491fcf5e56b/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "a881d69a-8547-4c91-9d9b-6c23ac0a3ed9", "build_tool": "maven", "elapsed_time": 113.78396773338318, "default_actions": false}], [{"failed": false, "tests": [{"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldExportBooleans", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldMapToBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BooleanLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldGetFirstNonNullResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.CombiningLeafValueHandlerTest", "name": "shouldRespectOrderOfTransformers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldCreateValuesWithLegacyConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 0.843, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.035, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.121, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomTypeHandlerTest", "name": "shouldLoadMap", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.148, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldMapToEnum", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldExportEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafValueHandlerTest", "name": "shouldNotConvertToUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForRootPathAndOtherProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldSupportRootProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue1(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldConvertValue2(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldHandleNull(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.PrimitivePropertyTypeTest", "name": "shouldReturnNullForInvalidValue(String, PropertyType, TestData)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnObjectClassAsReadClassForUnknownType", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFieldsWithTypeVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldDefineHashCodeFromType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleFieldsOfTypeVariable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleReadTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHaveTypeInfoInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleSimpleClassFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldReturnNullForTypesWithTooFewGenericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldHandleWriteTypeInCollectionFieldsWithTypeVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.TypeInformationTest", "name": "shouldBaseEqualsOnWrappedType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.079, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotExportUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldHandleUnsupportedTypesWhenTransformingToBigIntegerOrBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldExportBigIntegerValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldNotHandleExtensionsOfBigNumberClasses", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformNumbersToBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldTransformStringsToBigDecimalAndBigInteger", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.BigNumberLeafValueHandlerTest", "name": "shouldReturnNullForNonBigNumberType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldMapToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StringLeafValueHandlerTest", "name": "shouldExportStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[1]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldMapToNumbers(Class, Class, Object, Object)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotExportOtherValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldNotConvertUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.NumberLeafValueHandlerTest", "name": "shouldExportNumbers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldExpandPathsWithPeriod", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnWhetherToSplitDotPaths", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldOverrideEntriesOnClash", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDotsIfSoConfigured", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldNotExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.ObjectLeafValueHandlerTest", "name": "shouldMapToObject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.064, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.06, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.152, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotExportOtherValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldMapValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldReturnDefaultTransformerAsSingleton", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldExportValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldNotMapUnknownValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.StandardLeafValueHandlersTest", "name": "shouldCombineLeafValueHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/2fee7f4f-9072-4780-9d9d-7491fcf5e56b/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "f992860a-3869-4cc6-951a-f961d4b4992a", "build_tool": "maven", "elapsed_time": 65.59890985488892, "default_actions": false}]], "strategy": "PASS_PASS", "issues": [{"id": 363, "title": "Overlapping property with root property \"\" creates invalid YAML", "body": "Reported by Wector11211\u2014\r\n\r\nDefining a property at empty string `\"\"` and another one like path `\"enabled\"` will result in invalid YAML being produced:\r\n```yaml\r\n? ''\r\n:   foo:\r\n        # Comment that is present on all instances\r\n        servers: []\r\n    bar:\r\n        # Comment that is present on all instances\r\n        servers: []\r\nenabled: true\r\n```\r\n\r\nI confirmed that this worked in 1.3. Expected would be an exception just like when two properties use the same path, or one property has a conflict with another property (like `foo.bar` and `foo.bar.baz`)", "comments": ["## (Kind of) breaking change\r\n- Prior to 1.4.0, ConfigMe \"tolerated\" a property at path `\"\"` to exist alongside other properties. This was never the intention since the paths of multiple properties overlap, which ConfigMe otherwise prevents. Conflicts are now also prevented for root properties (= property at path `\"\"`).\r\n\r\nIf you used this behavior previously, put the root property under some other path. With a class implementing `MigrationService`, you can move existing data from the root property to the new path. See Wiki: [Migration service](https://github.com/AuthMe/ConfigMe/wiki/Migration-service)"], "labels": [{"name": "bug", "description": null}], "is_pull_request": false, "review_comments": null}]}
{"repository": "AuthMe/ConfigMe", "language": "java", "clone_url": "https://github.com/AuthMe/ConfigMe.git", "collection_timestamp": "2023-11-24T10:46:50.734596Z", "commit_hash": "aa91a6b315ec1ca94780459cc9d697218aea24cb", "commit_message": "#342 Throw if a new comment overwrites an existing comment path. (#373)\n\n", "commit_timestamp": "2023-09-04T09:49:14Z", "previous_commit_hash": "7449db4901c1464177fc2835ad543abb51a0b7ad", "previous_commit_message": "Add MockitoExtension to all tests using Mockito\n- MockitoExtension not only initializes Mockito's annotations but enforces strict stubbing, which we're interested in enforcing\n- Fix all issues related to strict stubbing\n", "previous_commit_timestamp": "2023-09-03T08:33:16Z", "time_to_patch": "1 day, 1:15:58", "bug_patch": "diff --git a/src/main/java/ch/jalu/configme/configurationdata/CommentsConfiguration.java b/src/main/java/ch/jalu/configme/configurationdata/CommentsConfiguration.java\nindex 225e0c4..0f050ce 100644\n--- a/src/main/java/ch/jalu/configme/configurationdata/CommentsConfiguration.java\n+++ b/src/main/java/ch/jalu/configme/configurationdata/CommentsConfiguration.java\n@@ -41,7 +41,11 @@ public class CommentsConfiguration {\n      * @param commentLines the comment lines to set for the path\n      */\n     public void setComment(@NotNull String path, @NotNull String... commentLines) {\n-        comments.put(path, Collections.unmodifiableList(Arrays.asList(commentLines)));\n+        List<String> replaced = comments.put(path, Collections.unmodifiableList(Arrays.asList(commentLines)));\n+        \n+        if (replaced != null) {\n+            throw new IllegalStateException(\"Comment lines already exists for the path '\" + path + \"'\");\n+        }\n     }\n \n     /**\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/ch/jalu/configme/configurationdata/CommentsConfigurationTest.java b/src/test/java/ch/jalu/configme/configurationdata/CommentsConfigurationTest.java\nindex c3c30b3..7afed0a 100644\n--- a/src/test/java/ch/jalu/configme/configurationdata/CommentsConfigurationTest.java\n+++ b/src/test/java/ch/jalu/configme/configurationdata/CommentsConfigurationTest.java\n@@ -11,6 +11,7 @@ import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.contains;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n \n /**\n  * Test for {@link CommentsConfiguration}.\n@@ -18,6 +19,22 @@ import static org.hamcrest.Matchers.equalTo;\n class CommentsConfigurationTest {\n \n     @Test\n+    void shouldThrowForExistingPath() {\n+        // given\n+        final String path = \"config.me\"; \n+        CommentsConfiguration conf = new CommentsConfiguration();\n+        conf.setComment(path, \"Old\", \"Comments\", \"1\", \"2\", \"3\");\n+        \n+        // when\n+        IllegalStateException ex = assertThrows(IllegalStateException.class, () -> conf.setComment(path, \"New Comment\"));\n+\n+        // then\n+        assertThat(ex.getMessage(), equalTo(\"Comment lines already exists for the path 'config.me'\"));\n+        assertThat(conf.getAllComments().keySet(), contains(path));\n+        assertThat(conf.getAllComments().get(path), contains(\"New Comment\"));\n+    }\n+\n+    @Test\n     void shouldOverrideExistingComment() {\n         // given\n         CommentsConfiguration conf = new CommentsConfiguration();\n@@ -25,9 +42,11 @@ class CommentsConfigurationTest {\n         conf.setComment(\"other.path\", \"Some other\", \"path I am\", \"adding\");\n \n         // when\n-        conf.setComment(\"com.acme\", \"Acme new comment\", \"1, 2, 3\");\n+        IllegalStateException ex = assertThrows(IllegalStateException.class, ()-> conf.setComment(\"com.acme\", \"Acme new comment\", \"1, 2, 3\"));\n \n         // then\n+        assertThat(ex.getMessage(), equalTo(\"Comment lines already exists for the path 'com.acme'\"));\n+\n         Map<String, List<String>> allComments = conf.getAllComments();\n         assertThat(allComments.keySet(), containsInAnyOrder(\"com.acme\", \"other.path\"));\n         assertThat(allComments.get(\"com.acme\"), contains(\"Acme new comment\", \"1, 2, 3\"));\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence2", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnlyOnce", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldCreateExportValueOnlyForBooleans", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldExportValueAsBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldSupportBooleanClassesAndParentsOnly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromBooleanValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnEnumClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldNotProduceExportValueForUnhandledTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigIntegersWithoutLossOfPrecision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigDecimalsWithoutLossOfPrecision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[12]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[13]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[16]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[13]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldReturnExportValueIfIsEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldConvertEnum", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfTargetTypeIsNotEnum", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfValueIsNotString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperTypeInfoWithNoClassEquivTest", "name": "shouldNotThrowForTypeInfoWithNoClassEquivalentTooEarly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.092, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromField", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromFieldsIncludingInheritance", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.075, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[1]", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForRootPathAndOtherProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldSupportRootProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertForMatchingType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToStringInLowercase", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldReturnStringAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotConvertIfTypeDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotReturnExportValueIfIsNotString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldReturnCollectionOfUsedUniqueIds", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeAsClass", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeCannotBeConvertedToClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeArgumentAsClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeArgumentCannotBeConvertedToClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldCreateBeanPropertyWithCustomType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForTypeInfoThatCannotBeConvertedToClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomLeafTypeTest", "name": "shouldLoadMap", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateIndexSpecifier", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldDetermineIfIsSpecifierSuffix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPathsAndBeAwareOfSpecialSuffixes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateKeySpecifier", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPaths", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypesAsMutableList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilderAndAllowToRemoveTypes", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCopyLeafTypesAfterCreation", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateInstanceWithProvidedHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnNullForNullArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertUnsupportedValuesToExportValues", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilder", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertForUnsupportedTargetTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToLeafType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDots", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToIncludeNonUniqueComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldCreateChildContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToSkipEmptyComment", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldUseSameUuidCommentsSetAcrossAllChildContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.609, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 1.317, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.194, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.077, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.277, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldExportValueAsString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForInvalidRegex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldSupportPatternClassesAndParentsOnly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldConvertForValidRegex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.148, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsWithoutUuidSet", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsIfUnique", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/431117c4-a8a4-462d-b4ef-9b283d6b2f87/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "f1979121-4a11-4b1e-a300-ac55b4d1270a", "build_tool": "maven", "elapsed_time": 134.30332279205322, "default_actions": false}], [{"failed": false, "tests": [{"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence2", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnlyOnce", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldCreateExportValueOnlyForBooleans", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldExportValueAsBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldSupportBooleanClassesAndParentsOnly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromBooleanValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.045, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnEnumClass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.013, "results": [{"result": "Failure", "message": "Expected java.lang.IllegalStateException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldThrowForExistingPath", "time": 0.002, "results": [{"result": "Failure", "message": "Expected java.lang.IllegalStateException to be thrown, but nothing was thrown.", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldNotProduceExportValueForUnhandledTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigIntegersWithoutLossOfPrecision", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigDecimalsWithoutLossOfPrecision", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[12]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldReturnExportValueIfIsEnum", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldConvertEnum", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfTargetTypeIsNotEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfValueIsNotString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperTypeInfoWithNoClassEquivTest", "name": "shouldNotThrowForTypeInfoWithNoClassEquivalentTooEarly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.051, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.125, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromField", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromFieldsIncludingInheritance", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[1]", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForRootPathAndOtherProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldSupportRootProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertForMatchingType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToStringInLowercase", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldReturnStringAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotConvertIfTypeDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotReturnExportValueIfIsNotString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldReturnCollectionOfUsedUniqueIds", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeAsClass", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeCannotBeConvertedToClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeArgumentAsClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeArgumentCannotBeConvertedToClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldCreateBeanPropertyWithCustomType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForTypeInfoThatCannotBeConvertedToClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomLeafTypeTest", "name": "shouldLoadMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateIndexSpecifier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldDetermineIfIsSpecifierSuffix", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPathsAndBeAwareOfSpecialSuffixes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateKeySpecifier", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPaths", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypesAsMutableList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilderAndAllowToRemoveTypes", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCopyLeafTypesAfterCreation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateInstanceWithProvidedHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnNullForNullArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertUnsupportedValuesToExportValues", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilder", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertForUnsupportedTargetTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToLeafType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDots", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToIncludeNonUniqueComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldCreateChildContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToSkipEmptyComment", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldUseSameUuidCommentsSetAcrossAllChildContexts", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.329, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 1.152, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.112, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.252, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldExportValueAsString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForInvalidRegex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldSupportPatternClassesAndParentsOnly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldConvertForValidRegex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.152, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsWithoutUuidSet", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsIfUnique", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/431117c4-a8a4-462d-b4ef-9b283d6b2f87/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "b4b60172-013f-4ef1-8e3e-04e28d0dd23e", "build_tool": "maven", "elapsed_time": 126.77929472923279, "default_actions": false}], [{"failed": false, "tests": [{"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence2", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnFirstOccurrence", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.UniqueCommentTest", "name": "shouldExportWithCommentOnlyOnce", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionalInBeanPropertyTest", "name": "shouldSaveOptionalFieldsProperly", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnNullForUnknownPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldHandleEmptyFile", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapYamlException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnEmptySetForNonExistentOrLeafValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadAllProperties", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithUtf8", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldTreatEmptyMapsAsLeafNodes", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadWithCustomCharset", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldRetrieveTypedValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnRootForEmptyString", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnLeafNodeKeysInFile", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldThrowForAbsentYamlMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReadValuesAndHandleAbsentOnes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfGivenPath", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnKeysOfFile", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnChildrenPathsOfRoot", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldWrapIOException", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderTest", "name": "shouldReturnIfReaderContainsValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldKeepOrderInExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldRetainOrderAsInFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.MapPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateValidInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldCreateInvalidInstance", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyValueTest", "name": "shouldIncludeValuesInToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldCreateExportValueOnlyForBooleans", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldExportValueAsBoolean", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldSupportBooleanClassesAndParentsOnly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.BooleanTypeTest", "name": "shouldConvertFromBooleanValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnFields", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldInvokeDefaultConstructor", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForMissingSection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnavailableSection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleComplexOptionalType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedCollectionType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnNullForUnmappableMandatoryField", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCommands", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleEmptyOptionalFields", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldForwardException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForMapWithNonStringKeyType", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateCorrectMapType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUnsupportedMapType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForEmptyFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldCreateWorldGroups", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldHandleInvalidErrors", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldReturnEmptyOptionalForFileWithEmptyMap(Path)", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldSkipInvalidEntry", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldLoadConfigWithOptionalProperties", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForUntypedCollection", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplTest", "name": "shouldThrowForCollectionWithGenerics", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldReturnFalseIfOldPathDoesNotExist", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldMoveProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.MigrationUtilsTest", "name": "shouldNotMovePropertyIfAlreadyExists", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlSetPropertyExportTest", "name": "shouldLoadAndExportProperly", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.BeanPropertyTypeTest", "name": "shouldInitializeWithDefaultMapper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeCommentFromAnnotation", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTopCommentTest", "name": "shouldIncludeRootCommentFromSectionCommentsMethod", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.StreamUtilsTest", "name": "shouldCreateStreamWithSameElement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnUnknown", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldHandleNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnEnumClass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnConvertedValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.type.EnumPropertyTypeTest", "name": "shouldReturnHimself", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldGetAndSetProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertyGetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHaveAppropriateStringRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanPropertyDescriptionImplTest", "name": "shouldHandlePropertySetError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldReturnReadOnlyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldOverrideExistingComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldThrowForExistingPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.CommentsConfigurationTest", "name": "shouldPreserveCommentsFromInputMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongDefault", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LongPropertyTest", "name": "shouldGetLongValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldCreateOptionsWithDefaults", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceOptionsTest", "name": "shouldKeepConfiguredValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldNotThrowErrorForInvalidValues(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportValue(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldExportEmptyArray(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[1]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertFromEmptyString(String, InlineArrayConverter, TestData)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.inlinearray.StandardInlineArrayConvertersTest", "name": "shouldConvertValueFromString(String, InlineArrayConverter, TestData)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldExportBigDecimalValuesCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNumberClassAndResolverNumberType(NumberType, Class)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldNotProduceExportValueForUnhandledTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnNullForUnsupportedValues(NumberType, Object)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigIntegersWithoutLossOfPrecision", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldDefineWhichClassesAreSupported(NumberType, Class, Class)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldReturnSameNumberForExportOrStringForBigNumberTypes(NumberType, Number, Object)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertToBigDecimalsWithoutLossOfPrecision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[12]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[13]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromNumber(NumberType, Number, Number, boolean)[16]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.NumberTypeTest", "name": "shouldConvertFromString(NumberType, String, Number, boolean)[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetValueFromReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringSetPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ShortPropertyTest", "name": "shouldGetLongValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldAddEmptyMapAsLeafProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldSkipNullValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperExportValueTest", "name": "shouldCreatePropertyEntriesForCommandConfig", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnEmptyOptional", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldAllowToDefineDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldValidateWithBasePropertyNullSafe", "time": 0.041, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnValueWithInvalidFlagIfReturnedFromReader", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldDelegateToBasePropertyAndHaveEmptyOptionalAsDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.OptionalPropertyTest", "name": "shouldReturnPresentValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldReturnExportValueIfIsEnum", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldConvertEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfTargetTypeIsNotEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.EnumLeafTypeTest", "name": "shouldNotConvertIfValueIsNotString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldExportAsEnumName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldReturnCorrectEnumValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForNonExistentValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.EnumPropertyTest", "name": "shouldFallBackToDefaultForInvalidValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperTypeInfoWithNoClassEquivTest", "name": "shouldNotThrowForTypeInfoWithNoClassEquivalentTooEarly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldProperlySaveBeanPropertyValueSetAfterwards", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSaveAfterPerformingMigrations", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldThrowExceptionForInvalidValue", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetOptionalPropertyCorrectly", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldCheckMigrationServiceOnStartup", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldHandleNullMigrationService", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldPerformReload", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldSetProperty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldGetProperty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerImplTest", "name": "shouldAllowToSetBeanPropertyValue", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldResetNegativeIntegerProperties", "time": 0.101, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnNoSaveNecessaryForAllPropertiesPresent", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldPassResourceToExtendedMethod", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.PlainMigrationServiceTest", "name": "shouldReturnTrueForMissingProperty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.ConfigDemoTest", "name": "shouldGenerateExpectedHtml", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldCreateImmutableSetForDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldHandleNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldDefineExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.LowercaseStringSetPropertyTest", "name": "shouldGetLowercaseStringListValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldExportMapWithDotsWithoutSplittingPaths", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNoSplitPathsTest", "name": "shouldLoadFilesWithDotsSuccessfully", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithUuidIfNotRepeatable", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldLetChildFieldsOverrideParentFields", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForMultiplePropertiesWithSameName", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldThrowForWhenExportNameIsNullForProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromField", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldHandleBooleanMethodsAndMatchWithFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldNotConsiderTransientFields", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnCommentsWithoutUuid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldBeAwareOfInheritanceAndRespectOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldPickUpCustomNameFromFieldsIncludingInheritance", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldUseExportName", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnEmptyListForNonBeanClass", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.propertydescription.BeanDescriptionFactoryImplTest", "name": "shouldReturnWritableProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReloadValues", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldReturnFieldsOfResource", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportAllPresentOptionalProperties", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportEmptyMap", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWriteMissingProperties", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportConfigurationWithExpectedComments", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldSkipAbsentOptionalProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldWrapIoExceptionInConfigMeException", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithCustomIndentationSize", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldProperlyExportAnyValues", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithUtf8", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceTest", "name": "shouldExportWithIso88591", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldHaveEmptyMapIfFileIsEmptyMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldLoadMapFromFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldUseDefaultValueIfFileIsEmpty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanMapOnRootLevelTest", "name": "shouldExportValuesAsEmptyMapIncludingComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootCommentAndNewLineEverywhere", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndFirstComment", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithRootAndWithoutFirstComment", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceNewLineTest", "name": "shouldExportWithoutRootAndWithFirstComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.DefaultMapperTest", "name": "shouldReturnSameInstance", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringFromBoolean", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldReturnStringForNumber", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldDefineExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringPropertyTest", "name": "shouldGetStringDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefaultForMixedListFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldHaveImmutableListAsDefaultValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListDefault", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.StringListPropertyTest", "name": "shouldGetStringListValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForSamePropertyAdded", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[1]", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[2]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForMalformedPropertyPath(String)[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForRootPathAndOtherProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForUnknownInternalEntry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldSupportRootProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldKeepEntriesByInsertionAndGroup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.PropertyListBuilderTest", "name": "shouldThrowForPropertyHavingIllegalChild", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldHaveAccessibleNoArgsConstructorForExtensions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyInitializerTest", "name": "shouldInstantiateBuilders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertForMatchingType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldConvertToStringInLowercase", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldReturnStringAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotConvertIfTypeDoesNotMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.StringTypeTest", "name": "shouldNotReturnExportValueIfIsNotString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeComplexObject", "time": 0.031, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldSerializeProperly", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCollectionOfBeanTypeTest", "name": "shouldLoadValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldThrowForUnknownValueTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForInt", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForDouble", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBigDecimal", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForEnum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldReturnCollectionOfUsedUniqueIds", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForBoolean", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyMap", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineCommentsWherePresent", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCombineComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateNodeForArray", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldHandleEmptyArray", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldTransferCommentsFromValueToKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeBuilderImplTest", "name": "shouldCreateCommentNodesForTextWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDefaultValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnDoubleFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.DoublePropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldHandleNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnNullFornonCollectionTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ArrayPropertyTest", "name": "shouldReturnArrayFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment2", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldSupportNewLinesInComments", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceCommentsExportTest", "name": "shouldCombineConfiguredCommentWithExportValueComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotRunMigrationsAndSetCurrentValueIfNoMigrationsApply", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithSuccessiveMigrations", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationLargerThanVersionProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMigrationWithTargetVersionEqualsStartVersion", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldTriggerSaveForCurrentVersionButInvalidValueInConfig", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldMigrateFromOlderVersionToNewerWithOneMigration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldThrowForMultipleMigrationsWithSameStartVersion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldNotSaveIfVersionIsUpToDate", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldReturnPropertyAndMigrationsForExtendingClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[2]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.migration.version.VersionMigrationServiceTest", "name": "shouldRunMigrationsAndReturnLastTargetVersion(int, int)[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateDescription", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeAsClass", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeCannotBeConvertedToClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldReturnTargetTypeArgumentAsClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldForwardErrorToErrorRecorder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldCreateProperPath", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MappingContextImplTest", "name": "shouldThrowIfTargetTypeArgumentCannotBeConvertedToClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportBeanPropertyAtRootProperly", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldCreateBeanPropertyWithCustomType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForObviouslyWrongDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldAllowInstantiationWithGenerics", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldThrowForTypeInfoThatCannotBeConvertedToClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldUseCustomMapper", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BeanPropertyTest", "name": "shouldExportPropertyAndReimport", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldCombineRootCommentWithThatOfParent", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnAllElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldHandleEmptyStringPath", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.PropertyPathTraverserTest", "name": "shouldReturnPathElements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileReaderPathsWithNumberTest", "name": "shouldReadPropertiesFromFile", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.TypeBasedPropertyTest", "name": "shouldReturnPropertyType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForUnknownProperty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldAcceptListWithTypedProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldHaveImmutablePropertyList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnCommentsForSections", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnValuesMap", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToTrue", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldThrowForInvalidValue", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldReturnAllComments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataImplTest", "name": "shouldInitializeAllPropertiesAndSetAllValuesValidToFalse", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldExportPattern", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnNullForMissingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldCompileDefaultStringParamToPattern", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldLoadValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldReturnWhetherPatternMatchesGivenValue", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.RegexPropertyTest", "name": "shouldHandlePatternErrorGracefully", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.BeanWithCustomLeafTypeTest", "name": "shouldLoadMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateIndexSpecifier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldDetermineIfIsSpecifierSuffix", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPathsAndBeAwareOfSpecialSuffixes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldCreateKeySpecifier", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.PathUtilsTest", "name": "shouldConcatPaths", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypesAsMutableList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilderAndAllowToRemoveTypes", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnDefaultLeafTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCopyLeafTypesAfterCreation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateInstanceWithProvidedHandlers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldReturnNullForNullArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertUnsupportedValuesToExportValues", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldCreateValueHandlerWithBuilder", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldNotConvertForUnsupportedTargetTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.leafvaluehandler.LeafValueHandlerImplTest", "name": "shouldConvertToLeafType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnFloatFromResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.FloatPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldReturnExportRepresentation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BooleanPropertyTest", "name": "shouldGetBoolDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.MapperImplCommentRepetitionTest", "name": "shouldExportAsExpected", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldReadAndWriteAndReloadWithFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.YamlFileResourceEscapingTest", "name": "shouldHandleAllProblematicChars", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfPathDoesNotHaveContainer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowForAlreadyExistingValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldStoreNodes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldThrowIfNoRootValueWasSaved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldCreateMapNodeFromAllValuesAndMoveCommentsToKeyNodes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.yaml.SnakeYamlNodeContainerImplTest", "name": "shouldReturnRootNode", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldNotSplitDots", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldKeepNormalizedMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldConvertKeysToStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.resource.MapNormalizerTest", "name": "shouldHandleEmptyMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldReturnValueForExport", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.IntegerPropertyTest", "name": "shouldGetIntDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.NestedMapPropertyDemoTest", "name": "shouldLoadMap", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonPropertyWithCustomFunction", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateMapPropertyWithEmptyMapAsDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateInlineArrayProperty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValueInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInCommonPropertyBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateCommonProperty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateSetProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPropertyTypeInCommonPropertyBuilder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateListProperty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldCreateArrayProperty", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.PropertyBuilderTest", "name": "shouldThrowForMissingPathInMapBuilder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToIncludeNonUniqueComments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldConcatenatePathsAppropriately", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldCreateChildContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldSpecifyToSkipEmptyComment", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.context.ExportContextTest", "name": "shouldUseSameUuidCommentsSetAcrossAllChildContexts", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowIfFieldCannotBeMadeAccessible", "time": 0.0, "results": [{"result": "Skipped", "message": "void ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest.shouldThrowIfFieldCannotBeMadeAccessible() is @Disabled", "type": null}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCollectPropertiesAlsoFromParentClasses", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldHandleSettingsHolderConstructorIssues", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldGetAllProperties", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldThrowWrappedExceptionIfFieldCannotBeAccessed", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesListAndCommentsMap", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldAccessPrivateField", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.configurationdata.ConfigurationDataBuilderTest", "name": "shouldCreateConfigDataWithPropertiesList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueFromResource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.ListPropertyTest", "name": "shouldReturnValueAsExportValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.beanmapper.migratingbeanmapper.BeanExtensionTest", "name": "shouldLoadFileAndConvertSingleValuesToCollection", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.BeanDemoTest", "name": "shouldOutputExpectedText", "time": 0.293, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnArrayFromInlineConvertHelper", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.InlineArrayPropertyTest", "name": "shouldReturnConvertedValueAsExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldSupportNullAsMigrationServiceAndCreateConfigurationDataFromClasses", "time": 0.876, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerWithYamlFileAndDefaultMigrationService", "time": 0.102, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject2", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateManagerWithYamlShorthandAndMigrateConfigFile", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManager", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldCreateSettingsManagerFromFileObject", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.SettingsManagerBuilderTest", "name": "shouldMigrateFromVersion1ToVersion2", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullPath", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldRejectNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldContainPathInToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.BasePropertyTest", "name": "shouldCheckIfIsValidInResource", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowForFolderAsFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfFileCannotBeCreated", "time": 0.294, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldCreateFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.UtilsTest", "name": "shouldThrowIfDirsCannotBeCreated", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForUnsupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldExportValueAsString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldReturnNullForInvalidRegex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldSupportPatternClassesAndParentsOnly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.types.RegexTypeTest", "name": "shouldConvertForValidRegex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForMigrationServiceRequiringMigration", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForHolderMissingComment", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckParentClassesForPropertyFields", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateSuccessfully", "time": 0.162, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonFinalClasses", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldVerifyAllEnumEntriesInComment", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldCheckForPropertiesWithoutCommentsAndRespectPropertyFilter", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldPassValidationForMigrationServiceNotRequiringMigration", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowIfBothLengthConstraintsAreNull", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldValidateCommentLengthWithGivenBounds", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForClassWithoutPrivateConstructor", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.utils.SettingsHolderClassValidatorTest", "name": "shouldThrowForNonConstantPropertyDeclarations", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsWithoutUuidSet", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldUnwrapValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.convertresult.ValueWithCommentsTest", "name": "shouldStreamThroughCommentsIfUnique", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnDefaultValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldReturnValueFromSource", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "ch.jalu.configme.properties.SetPropertyTest", "name": "shouldCreateExportValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/431117c4-a8a4-462d-b4ef-9b283d6b2f87/.github/workflows/maven_jdk11-crawler.yml", "type": "maven"}, "workflow_name": "b7acd5f5-7c56-49f3-b59e-89dce177bb17", "build_tool": "maven", "elapsed_time": 54.950164556503296, "default_actions": false}]], "strategy": "PASS_PASS", "issues": [{"id": 342, "title": "Throw if @Comment and registerComments use the same path for a comment", "body": "Currently, if `@Comment` on a property and some statement in `SettingsHolder#registerComments` set the comments for the same path, one of the comments is just discarded. This is misleading, and should be prevented by throwing an exception. There's no use case to defining part of the comment in the annotation or in the method\u2014one approach should be used per path. \r\n\r\n## To do\r\n- Change `CommentsConfiguration` to throw an exception if a comment is registered to a path that already has comments\r\n- Add unit tests\r\n\r\n## Hint\r\n- Map#put returns the old value for the same key if it existed, i.e. if it's not null, a comment already existed!", "comments": ["We can use `Map#containsKey` to check if the path is already mapped to a list of comments before throwing the exception. However, this approach may not allow us to overwrite an existing path.\r\nIt seems the `CommentsConfiguration#setComment` should allow overriding the paths. Hence as mentioned in the issue description `Map#put` is used to check.\r\n\r\nPull Request: https://github.com/AuthMe/ConfigMe/pull/373"], "labels": [{"name": "good-first-issue", "description": "Want to contribute? This label marks well-defined, [relatively] straightforward issues"}], "is_pull_request": false, "review_comments": null}, {"id": 373, "title": "Throw if a new comment overwrites an existing comment path.", "body": "### Change Log\r\n- Throw an exception if a comment is registered to a path that already has comments.\r\n- Fixed broken unit test case because of the change.\r\n- Added new unit test case covering the change.", "comments": [], "labels": [], "is_pull_request": true, "review_comments": ["I think this test method can be deleted in favor of the new method you've introduced", "I try to use Hamcrest matchers everywhere so that all assertions can be read as `assertThat(testee, matcherWithExpectation())`. There are some exceptions with `assertTrue` and `assertFalse` when we need to do a lot of checks on booleans and nothing else (i.e. they're not mixed with `assertThat`)\r\n\r\nHere I would suggest to maybe change L34 to assert that the key set has the entry we expect:\r\n```\r\nassertThat(conf.getAllComments().keySet(), contains(path));\r\n```\r\n\r\n^ That's an implicit check for the size, because `contains` will fail if there's any entry it can't account for, and so by that logic L35 would not be needed (L36 has an implicit size check).", "Other minor thing: I would hardcode the path here so that we fully see what the exception message is:\r\n```suggestion\r\n        assertThat(ex.getMessage(), equalTo(\"Comment lines already exists for the path config.me\"));\r\n```\r\n\r\nI know it's trivial to understand here, but keeping the full exception message as a plain string has helped me in the past to find things that were weirdly displayed that would have gone unnoticed otherwise. It also helps me to see the message in a plain string to think about whether the exception message I'm writing makes sense or not", "```suggestion\r\n        if (replaced != null) {\r\n```", "I might fiddle with the exception text sometime later (I'm a bit pressed for time today) but what would you think of this for now?\r\n```suggestion\r\n            throw new IllegalStateException(\"Comments were already registered for the path '\" + path + \"'\");\r\n```\r\n\r\nThis is a discussion btw, maybe you have a good idea. Enclosing the path in single quotes is a habit I took over from my former employer\u2014the idea being that it makes it clearer to the user what part of the texts are \"dynamic\" strings. Also makes the text a bit clearer in case someone uses the root path `\"\"`", "This test method `shouldOverrideExistingComment` not only checks for comment lines overriding, but also checks that the other path is left unchanged (L53). Kindly suggest if it still seems like a duplicate test case and should be removed.", "That's true, that means the new test is a subset of the old test since it tests the same things, minus checking that other comments are unchanged. I think it's fine to keep both for now since there's no need for another iteration. Thanks for your work!"]}]}
