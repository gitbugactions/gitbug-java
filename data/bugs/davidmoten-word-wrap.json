{"repository": "davidmoten/word-wrap", "language": "java", "clone_url": "https://github.com/davidmoten/word-wrap.git", "collection_timestamp": "2023-11-23T17:23:42.637896Z", "commit_hash": "e59eedf0bac7d5ca7ee0062f3816c7ac5c3de4e0", "commit_message": "fix state problem with extraWordChars in builder, fixes #47  (#48)\n\n", "commit_timestamp": "2023-01-31T22:16:05Z", "previous_commit_hash": "930eb5e91a40f00a6782e939606d6c1d397629e0", "previous_commit_message": "Bump maven-checkstyle-plugin from 3.2.0 to 3.2.1\n\nBumps [maven-checkstyle-plugin](https://github.com/apache/maven-checkstyle-plugin) from 3.2.0 to 3.2.1.\n- [Release notes](https://github.com/apache/maven-checkstyle-plugin/releases)\n- [Commits](https://github.com/apache/maven-checkstyle-plugin/compare/maven-checkstyle-plugin-3.2.0...maven-checkstyle-plugin-3.2.1)\n\n---\nupdated-dependencies:\n- dependency-name: org.apache.maven.plugins:maven-checkstyle-plugin\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "previous_commit_timestamp": "2023-01-12T08:02:32Z", "time_to_patch": "19 days, 14:13:33", "bug_patch": "diff --git a/src/main/java/org/davidmoten/text/utils/WordWrap.java b/src/main/java/org/davidmoten/text/utils/WordWrap.java\nindex ceca282..b96ffee 100644\n--- a/src/main/java/org/davidmoten/text/utils/WordWrap.java\n+++ b/src/main/java/org/davidmoten/text/utils/WordWrap.java\n@@ -229,6 +229,7 @@ public final class WordWrap {\n          * @return this\n          */\n         public Builder includeExtraWordChars(String includeWordChars) {\n+            copyOnWriteDefaultWordCharset();\n             Set<Character> set = toSet(includeWordChars);\n             this.extraWordChars.addAll(set);\n             return this;\n@@ -242,12 +243,22 @@ public final class WordWrap {\n          * @return this\n          */\n         public Builder excludeExtraWordChars(String excludeWordChars) {\n+            copyOnWriteDefaultWordCharset();\n             Set<Character> set = toSet(excludeWordChars);\n             this.extraWordChars.removeAll(set);\n             return this;\n         }\n \n         /**\n+         * Create a copy of extraWordChars in case it refers to SPECIAL_WORD_CHARS_SET_DEFAULT.\n+         */\n+        private void copyOnWriteDefaultWordCharset() {\n+            if (this.extraWordChars == SPECIAL_WORD_CHARS_SET_DEFAULT) {\n+                this.extraWordChars = new HashSet<>(SPECIAL_WORD_CHARS_SET_DEFAULT);\n+            }\n+        }\n+\n+        /**\n          * Sets if to break words using a hyphen character. If set to false then no\n          * breaking character will be used.\n          * \n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/org/davidmoten/text/utils/WordWrapTest.java b/src/test/java/org/davidmoten/text/utils/WordWrapTest.java\nindex b9f1307..83fa05d 100644\n--- a/src/test/java/org/davidmoten/text/utils/WordWrapTest.java\n+++ b/src/test/java/org/davidmoten/text/utils/WordWrapTest.java\n@@ -427,6 +427,13 @@ public class WordWrapTest {\n     public void testNumbersWrapByDefault() {\n         assertEquals(\"hello 12\\n3\", WordWrap.from(\"hello 123\").breakWords(false).maxWidth(8).wrap());\n     }\n+\n+    @Test\n+    public void testStatelessness() {\n+        assertEquals(\"hello super-\\ncool\", WordWrap.from(\"hello super-cool\").breakWords(false).maxWidth(12).wrap());\n+        assertEquals(\"hello\\nsuper-cool\", WordWrap.from(\"hello super-cool\").breakWords(false).maxWidth(12).includeExtraWordChars(\"-\").wrap());\n+        assertEquals(\"hello super-\\ncool\", WordWrap.from(\"hello super-cool\").breakWords(false).maxWidth(12).wrap());\n+    }\n     \n     ////////////////////////////////////////////\n     // Novel wrapping tests\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testRightTrim", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testConcat", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReady", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadEmptyString", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testIllegalArguments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMethodsThrowWhenClosed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadsStringsCorrectly", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMarkAndReset", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesAfterLetters", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testBlank", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "test", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesOnly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2WithLongWord", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSetLength", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubstring", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testCharAt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testDelete", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendChar", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommaDoesNotHappenWithoutSpaceAfter", "time": 0.096, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommasWithDigits", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnQuote", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakQuoteInMiddle", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "carriageReturnRemoved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "conserveWhitespace", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "dontBreakOnQuestionMark", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "emptyText", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "endWithNewLine", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineALotOfWhiteSpaceInMiddle", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineSplitsOnWhiteSpace", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineWithTwoSpacesInMiddle", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShortWithMoreLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceLastLine", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenNewLine", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenWord", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreak", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreakNoHyphens", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "newLineCharacterPreserved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "noHyphenAfterDigits", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "oneLetter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceConserved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceLongWord", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineHasWhitespace", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineNoWhitespace", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortThenLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceAndQuestionMark", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceThenOneLetter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testCloseReaderThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontWrapNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testExcludeWordChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFileDoesNotExist", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromInputStream", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testImportanceOfBeingEarnest", "time": 0.099, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIncludeWordChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIsUtilityClass", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces0", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrowsDontCloseReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testMaxWidthZero", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNewLineOverride", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNumbersWrapByDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimAtEnd", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimOnlySpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testSetWordChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testStringWidth", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTheBlackGang", "time": 0.142, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListFinishWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListWithNewLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTreasureIsland", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFile", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFileThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWriterThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespaceConservedAfterNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespacePreservedAfterNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "wrapRightTrimsWhitespaceBeforeNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/83d7d23b-019f-4870-941a-76907a1cd58e/.github/workflows/ci-crawler.yml", "type": "maven"}, "workflow_name": "d6200a49-052e-493f-9feb-dc0c41de4e02", "build_tool": "maven", "elapsed_time": 73.68879985809326, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testRightTrim", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testConcat", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReady", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadEmptyString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testIllegalArguments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMethodsThrowWhenClosed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadsStringsCorrectly", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMarkAndReset", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesAfterLetters", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testBlank", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "test", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesOnly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2WithLongWord", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSetLength", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubstring", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testCharAt", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testDelete", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendChar", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommaDoesNotHappenWithoutSpaceAfter", "time": 0.115, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommasWithDigits", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnQuote", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakQuoteInMiddle", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "carriageReturnRemoved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "conserveWhitespace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "dontBreakOnQuestionMark", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "emptyText", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "endWithNewLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineALotOfWhiteSpaceInMiddle", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineSplitsOnWhiteSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineWithTwoSpacesInMiddle", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShortWithMoreLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceLastLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenNewLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenWord", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreak", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreakNoHyphens", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "newLineCharacterPreserved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "noHyphenAfterDigits", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "oneLetter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceConserved", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceLongWord", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineHasWhitespace", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineNoWhitespace", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortThenLong", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceAndQuestionMark", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceThenOneLetter", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testCloseReaderThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontWrapNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testExcludeWordChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFileDoesNotExist", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromInputStream", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testImportanceOfBeingEarnest", "time": 0.096, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIncludeWordChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIsUtilityClass", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces0", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrowsDontCloseReader", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testMaxWidthZero", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNewLineOverride", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNumbersWrapByDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimAtEnd", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimOnlySpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testSetWordChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testStatelessness", "time": 0.012, "results": [{"result": "Failure", "message": "expected:<hello[ super- ]cool> but was:<hello[ super-]cool>", "type": "org.junit.ComparisonFailure"}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testStringWidth", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTheBlackGang", "time": 0.091, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToList", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListFinishWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTreasureIsland", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFileThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWriterThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespaceConservedAfterNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespacePreservedAfterNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "wrapRightTrimsWhitespaceBeforeNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/83d7d23b-019f-4870-941a-76907a1cd58e/.github/workflows/ci-crawler.yml", "type": "maven"}, "workflow_name": "28cf14d0-7b81-4087-ab60-082c632024fe", "build_tool": "maven", "elapsed_time": 53.84468197822571, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testRightTrim", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceConcatRighTrimTest", "name": "testConcat", "time": 0.118, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReady", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadEmptyString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testIllegalArguments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMethodsThrowWhenClosed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testReadsStringsCorrectly", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.CharSequenceReaderTest", "name": "testMarkAndReset", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesAfterLetters", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testBlank", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "test", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testRightTrimSpacesOnly", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2WithLongWord", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSetLength", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubstring", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testCharAt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testDelete", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendChar", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testAppendStringBuilder2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.StringBuilder2Test", "name": "testSubsequence", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommaDoesNotHappenWithoutSpaceAfter", "time": 0.088, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnCommasWithDigits", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakOnQuote", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "breakQuoteInMiddle", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "carriageReturnRemoved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "conserveWhitespace", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "dontBreakOnQuestionMark", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "emptyText", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "endWithNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineALotOfWhiteSpaceInMiddle", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineSplitsOnWhiteSpace", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longLineWithTwoSpacesInMiddle", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShort", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longThenShortWithMoreLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceLastLine", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenNewLine", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWhitespaceThenWord", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreak", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "longWordForcesBreakNoHyphens", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "newLineCharacterPreserved", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "noHyphenAfterDigits", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "oneLetter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceConserved", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "precedingWhitespaceLongWord", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineHasWhitespace", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortLineNoWhitespace", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "shortThenLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceAndQuestionMark", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "spaceThenOneLetter", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testCloseReaderThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontBreakLongWords2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testDontWrapNumbers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testExcludeWordChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromFileDoesNotExist", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testFromInputStream", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testImportanceOfBeingEarnest", "time": 0.063, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIncludeWordChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testIsUtilityClass", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces0", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLeftTrimLeadingSpaces3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testLineConsumerThrowsDontCloseReader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testMaxWidthZero", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNewLineOverride", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testNumbersWrapByDefault", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimAtEnd", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimNoSpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testRightTrimOnlySpace", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testSetWordChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testStatelessness", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testStringWidth", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTheBlackGang", "time": 0.076, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToList", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListFinishWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testToListWithNewLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testTreasureIsland", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFile", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWrapToFileThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "testWriterThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespaceConservedAfterNewLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "whitespacePreservedAfterNewLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.davidmoten.text.utils.WordWrapTest", "name": "wrapRightTrimsWhitespaceBeforeNewLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/83d7d23b-019f-4870-941a-76907a1cd58e/.github/workflows/ci-crawler.yml", "type": "maven"}, "workflow_name": "823bdbdf-0f62-4b35-9df1-4247dadd9c01", "build_tool": "maven", "elapsed_time": 56.969420433044434, "default_actions": false}]], "strategy": "PASS_PASS", "issues": [{"id": 47, "title": "Static class WordWrap is not stateless", "body": "Some calls to the builder indirectly modify the static field SPECIAL_WORD_CHARS_SET_DEFAULT.\r\n\r\nThe problem is ilustrated by this example:\r\n\r\n```Java\r\n    void bugTest() {\r\n        testA();\r\n        testB();\r\n        testA();\r\n    }\r\n\r\n    void testA() {\r\n        System.out.println(\"TEST A\");\r\n        String result = WordWrap\r\n                .from(\"Test Super-test\")\r\n                .breakWords(false)\r\n                .maxWidth(11)\r\n                .wrap();\r\n        System.out.println(result.equals(\"Test Super-\\ntest\") ? \"SUCCESS\" : \"ERROR\");\r\n    }\r\n\r\n    void testB() {\r\n        System.out.println(\"TEST B\");\r\n        String result = WordWrap\r\n                .from(\"Test Super-test\")\r\n                .breakWords(false)\r\n                .maxWidth(11)\r\n                .includeExtraWordChars(\"-\")\r\n                .wrap();\r\n        System.out.println(result.equals(\"Test\\nSuper-test\") ? \"SUCCESS\" : \"ERROR\");\r\n    }\r\n```\r\n\r\nThe output is:\r\n\r\n```\r\nTEST A\r\nSUCCESS\r\nTEST B\r\nSUCCESS\r\nTEST A\r\nERROR\r\n```\r\n\r\nThe cause is, that [here](https://github.com/davidmoten/word-wrap/blob/master/src/main/java/org/davidmoten/text/utils/WordWrap.java#L146) SPECIAL_WORD_CHARS_SET_DEFAULT is assigned to extraWordChars, which then can get modified by calling [includeExtraWordChars](https://github.com/davidmoten/word-wrap/blob/master/src/main/java/org/davidmoten/text/utils/WordWrap.java#L231) or [excludeExtraWordChars](https://github.com/davidmoten/word-wrap/blob/master/src/main/java/org/davidmoten/text/utils/WordWrap.java#L244) method.", "comments": ["ok thanks, I'll have a look", "0.1.12 is on Maven Central now with the state fix"], "labels": [{"name": "bug", "description": "Something isn't working"}], "is_pull_request": false, "review_comments": null}, {"id": 48, "title": "Fix #47 (Static class WordWrap is not stateless)", "body": "Wrote a fix for bug #47.\r\n\r\nThe naming of the method is not great, but this implementation should be quite performant as it only copies the set in cases where it would otherwise be modified.", "comments": ["thanks very much, I'll have a look over the weekend", "# [Codecov](https://codecov.io/gh/davidmoten/word-wrap/pull/48?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten) Report\nBase: **97.56**% // Head: **97.59**% // Increases project coverage by **`+0.03%`** :tada:\n> Coverage data is based on head [(`0ffa290`)](https://codecov.io/gh/davidmoten/word-wrap/pull/48?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten) compared to base [(`9401feb`)](https://codecov.io/gh/davidmoten/word-wrap/commit/9401feb27d80ebe5bcd269fea18e11064cdba125?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten).\n> Patch coverage: 100.00% of modified lines in pull request are covered.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff              @@\n##             master      #48      +/-   ##\n============================================\n+ Coverage     97.56%   97.59%   +0.03%     \n  Complexity      119      119              \n============================================\n  Files             6        6              \n  Lines           328      333       +5     \n  Branches         48       49       +1     \n============================================\n+ Hits            320      325       +5     \n  Misses            4        4              \n  Partials          4        4              \n```\n\n\n| [Impacted Files](https://codecov.io/gh/davidmoten/word-wrap/pull/48?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten) | Coverage \u0394 | |\n|---|---|---|\n| [.../main/java/org/davidmoten/text/utils/WordWrap.java](https://codecov.io/gh/davidmoten/word-wrap/pull/48?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten#diff-c3JjL21haW4vamF2YS9vcmcvZGF2aWRtb3Rlbi90ZXh0L3V0aWxzL1dvcmRXcmFwLmphdmE=) | `96.22% <100.00%> (+0.09%)` | :arrow_up: |\n\nHelp us with your feedback. Take ten seconds to tell us [how you rate us](https://about.codecov.io/nps?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten). Have a feature suggestion? [Share it here.](https://app.codecov.io/gh/feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten)\n\n</details>\n\n[:umbrella: View full report at Codecov](https://codecov.io/gh/davidmoten/word-wrap/pull/48?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten).   \n:loudspeaker: Do you have feedback about the report comment? [Let us know in this issue](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Dave+Moten).\n", "Thanks for this, I'm taking a slightly different approach and including it in the fix for #49. ", "Yep I'll go ahead with your PR, thank you", "I renamed methods and reworked javadoc in #50. Thanks very much for the PR!"], "labels": [], "is_pull_request": true, "review_comments": []}]}
