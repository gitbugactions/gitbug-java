{"repository": "adoble/adr-j", "language": "java", "clone_url": "https://github.com/adoble/adr-j.git", "collection_timestamp": "2023-11-24T17:40:02.174161Z", "commit_hash": "7fe616c55a5b9d8c17f0e69a5aaf8daca9d78abd", "commit_message": "Corrected issue 43\n", "commit_timestamp": "2023-06-30T15:48:54Z", "previous_commit_hash": "13d472a0a6c56795027b9a45047fa0c2549a248c", "previous_commit_message": "Updated\n", "previous_commit_timestamp": "2022-04-10T16:34:47Z", "time_to_patch": "445 days, 23:14:07", "bug_patch": "diff --git a/src/main/java/org/doble/commands/CommandADR.java b/src/main/java/org/doble/commands/CommandADR.java\nindex 216e3db..6e545e8 100644\n--- a/src/main/java/org/doble/commands/CommandADR.java\n+++ b/src/main/java/org/doble/commands/CommandADR.java\n@@ -19,7 +19,7 @@ import picocli.CommandLine.HelpCommand;\n \r\n @Command(name = \"adr\",\r\n \t\t description = \"Creation and management of architectural decision records (ADRs)\",\r\n-\t\t version = \"2.1\",\r\n+\t\t version = \"3.2.1\",\r\n \t\t exitCodeListHeading = \"Exit Codes:%n\",\r\n \t\t exitCodeList        = { \" 0:Successful program execution.\",\r\n \t\t\t\t \t\t\t\t \"64:Invalid input: an unknown option or invalid parameter was specified.\",\r\ndiff --git a/src/main/java/org/doble/commands/CommandNew.java b/src/main/java/org/doble/commands/CommandNew.java\nindex ea37e42..cd2f34a 100644\n--- a/src/main/java/org/doble/commands/CommandNew.java\n+++ b/src/main/java/org/doble/commands/CommandNew.java\n@@ -236,7 +236,7 @@ public class CommandNew implements Callable<Integer> {\n \r\n \t/**\r\n \t * Find the highest index of the ADRs in the adr directory by iterating\r\n-\t * through all the files\r\n+\t * through all the files that start with an  adr index number (i.e. dddd where d is a digit)\r\n \t *\r\n \t * @return int The highest index found. If no files are found returns 0.\r\n \t */\r\n@@ -248,19 +248,58 @@ public class CommandNew implements Callable<Integer> {\n \t\tPath adrPath = rootPath.resolve(docPath);\r\n \r\n \t\ttry {\r\n-\t\t\thighestIndex = Files.list(adrPath).mapToInt(CommandNew::toInt).max();\r\n+\t\t\thighestIndex = Files.list(adrPath).filter(CommandNew::wellFormedADR).mapToInt(CommandNew::toInt).max();\r\n+\t\t\t\r\n \t\t} catch (IOException e) {\r\n \t\t\tthrow new ADRException(\"FATAL: Unable to determine the indexes of the ADRs.\", e);\r\n-\t\t}\r\n+\t\t} \r\n \r\n \t\treturn (highestIndex.isPresent() ? highestIndex.getAsInt() : 0);\r\n \t}\r\n \r\n+\t// Convert a ADR file name to its id number\r\n+\t// Assumes that the ADR file name is well formed.\r\n \tprivate static int toInt(Path p) {\r\n \t\tString name = p.getFileName().toString();\r\n \r\n-\t\t// Extract the first 4 characters\r\n-\t\tString id = name.substring(0, 4);\r\n-\t\treturn new Integer(id);\r\n+\t\t// Extract the first 4 characters and creat an integer from them\r\n+\t\tString id = name.substring(0, ADR.MAX_ID_LENGTH);\r\n+\t\treturn Integer.parseInt(id);\r\n+\t\t\r\n \t}\r\n+\r\n+\t/*\r\n+\t * A well formed ADR has the form:\r\n+\t *     dddd-*\r\n+\t * where 'd' is a digit\r\n+\t * and * refers to any number of charaters.\r\n+\t */\r\n+\tprivate static boolean wellFormedADR(Path p) {\r\n+\t\t\r\n+\t\tString name = p.getFileName().toString();\r\n+\r\n+\t\t// Instead of using a regex do some simple, and fast, checks\r\n+\r\n+\t\t// Check that the file is longer than the id length and the '-'\r\n+\t\tif (name.length() < ADR.MAX_ID_LENGTH + 1) {\r\n+\t\t\treturn false;\r\n+\t\t}\r\n+\r\n+\t\t// Check that the 5th character is a '-'\r\n+\t\tif (name.indexOf('-') != ADR.MAX_ID_LENGTH) return false;\r\n+\r\n+\t\t// Check that the first 4 characters are digits\r\n+\t\tboolean is_adr_with_index = name.chars().mapToObj(i -> (char)i).limit(ADR.MAX_ID_LENGTH).allMatch(c -> Character.isDigit(c));\r\n+\t\tif (!is_adr_with_index) {\r\n+\t\t\treturn false;\r\n+\t\t}\r\n+\r\n+\t\t\r\n+\r\n+\t\t// All checks passed\r\n+\t\treturn true;\r\n+\r\n+\t}\r\n+\r\n+\t\r\n }\r\ndiff --git a/src/main/java/org/doble/commands/CommandVersion.java b/src/main/java/org/doble/commands/CommandVersion.java\nindex a15bd3e..164d270 100644\n--- a/src/main/java/org/doble/commands/CommandVersion.java\n+++ b/src/main/java/org/doble/commands/CommandVersion.java\n@@ -28,7 +28,7 @@ public class CommandVersion implements Callable<Integer> {\n \t * Version numbers adhere to to Semantic Versioning:  https://semver.org/spec/v2.0.0.html  *\r\n \t *                                                                                         *\r\n \t *******************************************************************************************/\r\n-\tprivate String version = \"3.2.0\";  // Minor release, backwards compatible \r\n+\tprivate String version = \"3.2.1\";  // Minor release, backwards compatible \r\n \t\t\r\n \t\r\n \t@ParentCommand\r\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/org/doble/adr/CommandNewTest.java b/src/test/java/org/doble/adr/CommandNewTest.java\nindex 794797d..5c6db46 100644\n--- a/src/test/java/org/doble/adr/CommandNewTest.java\n+++ b/src/test/java/org/doble/adr/CommandNewTest.java\n@@ -124,6 +124,43 @@ public class CommandNewTest {\n \t\tassertTrue(actualFileNames.containsAll(expectedFileNames), \"File(s) missing\");\r\n \t\tassertTrue(expectedFileNames.containsAll(actualFileNames), \"Unexpected file(s) found\");\r\n \t}\r\n+\r\n+\t// Tests to check that issue 43 has been corrected\r\n+\t@Test\r\n+\tpublic void testOtherFilesInADRDirectory () throws Exception {\r\n+\t\tString adrTitle1 = \"Test architecture decision 1\";\r\n+        String adrTitle2 = \"Test architecture decision 2\";\r\n+\r\n+\t\tString[] args = TestUtilities.argify(\"new \" + adrTitle1);\r\n+\r\n+\t\tint exitCode = ADR.run(args, env);\r\n+\t\tassertEquals(0, exitCode);\r\n+\r\n+\t\targs = TestUtilities.argify(\"new \" + adrTitle2);\r\n+\r\n+\t\texitCode = ADR.run(args, env);\r\n+\t\tassertEquals(0, exitCode);\r\n+\r\n+\r\n+\t\t// Add a new file that does not follow the ADR naming convention. \r\n+\t\tFiles.createFile(fileSystem.getPath(rootPathName, docsPath, \"other_doc.md\"));  \r\n+\t\t\r\n+\t\t// Try and create a new ADR. It should work.\r\n+\t\targs = TestUtilities.argify(\"new \" + \"New decision\");\r\n+\r\n+\t\texitCode = ADR.run(args, env);\r\n+\t\tassertEquals(0, exitCode);\r\n+\r\n+\t\t// Add a new directory to the adr directory\r\n+\t\tFiles.createDirectory(fileSystem.getPath(rootPathName, docsPath, \"images\"));\r\n+\r\n+\t\t// Try and create a new ADR. It should work.\r\n+\t\targs = TestUtilities.argify(\"new \" + \"Another decision\");\r\n+\r\n+\t\texitCode = ADR.run(args, env);\r\n+\t\tassertEquals(0, exitCode);\r\n+\r\n+\t}\r\n \t\r\n \r\n }\r\n", "test_patch_file_extensions": ["java"], "non_code_patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 7fdec20..4236a1d 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -17,6 +17,7 @@ and from version 4.0.0 this project adheres to [Semantic Versioning](https://sem\n * Upgraded to use version 7.4.2 of Gradle\r\n \r\n ### Fixed\r\n+* Fixed [issue 43](https://github.com/adoble/adr-j/issues/43) allowing a user to add other files and directories in the same directory as the ADRs (thanks [maxandersen](https://github.com/maxandersen) for pointing this out). The behaviour is now that files and directories that are not \"well formed\" ADRs are ignored.\r\n * Fixed [issue #39](https://github.com/adoble/adr-j/issues/39) in handling reverse links with ASCCIDOC templates (thanks [Torsten Keiber](https://github.com/tkleiber))\r\n * Fixed [issue #37](https://github.com/adoble/adr-j/issues/37)\r\n \r\n", "non_code_patch_file_extensions": ["md"], "change_type": "MIXED", "actions_runs": [[{"failed": false, "tests": [{"classname": "org.doble.adr.CommandListTest", "name": "testList()", "time": 0.063, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testHelp()", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testNoArgs()", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewErrorTest", "name": "testNoInit()", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test1Superseded()", "time": 0.085, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test2MultipleSupersedes()", "time": 0.106, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test3SupersedesInvalidADR()", "time": 0.087, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromEditorVariable()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferValueInEditorVariableOverVisualVariable()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedEditorToAllOtherEditors()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "editorCommandIsNullWhenNoVariablesSet()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedVisualToSystemEditors()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromVisualVariable()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EnvironmentTest", "name": "testEnvironment()", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDateFormat()", "time": 0.211, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPathExistingDirectory()", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorSingleName()", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorMulitpleName()", "time": 0.045, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testTemplateFile()", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testIncorrectDataFormat()", "time": 0.09, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfig()", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPath()", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testTemplates()", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testDifferentFileTypes()", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitialTemplateFileNotFound()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInit()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitCustomDirectory()", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplate()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testEditorNotSet()", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplateAndInitTemplate()", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithInitTemplateAlone()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testReInit()", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testTemplateFileNotFound()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testLinks()", "time": 0.093, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testMissingLInkSpec()", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testNonexistingLink()", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test1BasicRecordConstruction()", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test2ComplexRecordConstruction()", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "nameIsLowerCased()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstruction()", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithDefaultAuthor()", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithGivenAuthor()", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testExplicitDateFormatter()", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstructionWithTemplate()", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testReverseLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testUpdatingLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptyLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testReverseLinksWithMetaData()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptySupercedes()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testSupercecedesMetaData()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testLinkMetaData()", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreNewPopertiesFile()", "time": 0.128, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreExistingPropertiesFile()", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testLoad()", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditMalformedId()", "time": 0.126, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditNonExistingADR()", "time": 0.12, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditADR()", "time": 0.126, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandLinkTest", "name": "testLinks()", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testWithoutTitle()", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testSimpleCommand()", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testManyADRs()", "time": 0.099, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/4a20ab8d-d8f8-40f0-b3f9-aecfe7ebe115/.github/workflows/gradle-crawler.yml", "type": "gradle"}, "workflow_name": "13dda930-2537-4b4b-b32d-585c2beeadaf", "build_tool": "gradle", "elapsed_time": 70.67969679832458, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.doble.adr.CommandListTest", "name": "testList()", "time": 0.083, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testHelp()", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testNoArgs()", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewErrorTest", "name": "testNoInit()", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test1Superseded()", "time": 0.152, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test2MultipleSupersedes()", "time": 0.154, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test3SupersedesInvalidADR()", "time": 0.148, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromEditorVariable()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferValueInEditorVariableOverVisualVariable()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedEditorToAllOtherEditors()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "editorCommandIsNullWhenNoVariablesSet()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedVisualToSystemEditors()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromVisualVariable()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EnvironmentTest", "name": "testEnvironment()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDateFormat()", "time": 0.289, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPathExistingDirectory()", "time": 0.171, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorSingleName()", "time": 0.084, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorMulitpleName()", "time": 0.081, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testTemplateFile()", "time": 0.087, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testIncorrectDataFormat()", "time": 0.093, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfig()", "time": 0.2, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPath()", "time": 0.068, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testTemplates()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testDifferentFileTypes()", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitialTemplateFileNotFound()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInit()", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitCustomDirectory()", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplate()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testEditorNotSet()", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplateAndInitTemplate()", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithInitTemplateAlone()", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testReInit()", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testTemplateFileNotFound()", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testLinks()", "time": 0.134, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testMissingLInkSpec()", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testNonexistingLink()", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test1BasicRecordConstruction()", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test2ComplexRecordConstruction()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "nameIsLowerCased()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstruction()", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithDefaultAuthor()", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithGivenAuthor()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testExplicitDateFormatter()", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstructionWithTemplate()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testReverseLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testUpdatingLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptyLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testReverseLinksWithMetaData()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptySupercedes()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testSupercecedesMetaData()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testLinkMetaData()", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreNewPopertiesFile()", "time": 0.124, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreExistingPropertiesFile()", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testLoad()", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditMalformedId()", "time": 0.156, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditNonExistingADR()", "time": 0.24, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditADR()", "time": 0.19, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandLinkTest", "name": "testLinks()", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testOtherFilesInADRDirectory()", "time": 0.058, "results": [{"result": "Failure", "message": "org.opentest4j.AssertionFailedError: expected: <0> but was: <1>", "type": "org.opentest4j.AssertionFailedError"}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testWithoutTitle()", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testSimpleCommand()", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testManyADRs()", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/4a20ab8d-d8f8-40f0-b3f9-aecfe7ebe115/.github/workflows/gradle-crawler.yml", "type": "gradle"}, "workflow_name": "69aa1239-69f3-42c6-b312-fb0c86aeacc5", "build_tool": "gradle", "elapsed_time": 111.3857102394104, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.doble.adr.CommandListTest", "name": "testList()", "time": 0.082, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testHelp()", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandHelpTest", "name": "testNoArgs()", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewErrorTest", "name": "testNoInit()", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test1Superseded()", "time": 0.105, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test2MultipleSupersedes()", "time": 0.105, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewSupersedesTest", "name": "test3SupersedesInvalidADR()", "time": 0.098, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromEditorVariable()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferValueInEditorVariableOverVisualVariable()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedEditorToAllOtherEditors()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "editorCommandIsNullWhenNoVariablesSet()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "preferPrefixedVisualToSystemEditors()", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EditorCommandResolverTest", "name": "extractEditorCommandFromVisualVariable()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.EnvironmentTest", "name": "testEnvironment()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDateFormat()", "time": 0.366, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPathExistingDirectory()", "time": 0.125, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorSingleName()", "time": 0.094, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfigAuthorMulitpleName()", "time": 0.073, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testTemplateFile()", "time": 0.071, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testIncorrectDataFormat()", "time": 0.075, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testConfig()", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandConfigTest", "name": "testDocPath()", "time": 0.092, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testTemplates()", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewWithTemplateTest", "name": "testDifferentFileTypes()", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitialTemplateFileNotFound()", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInit()", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitCustomDirectory()", "time": 0.035, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplate()", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testEditorNotSet()", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithTemplateAndInitTemplate()", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testInitWithInitTemplateAlone()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testReInit()", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandInitTest", "name": "testTemplateFileNotFound()", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testLinks()", "time": 0.094, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testMissingLInkSpec()", "time": 0.042, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewLinkTest", "name": "testNonexistingLink()", "time": 0.052, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test1BasicRecordConstruction()", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "test2ComplexRecordConstruction()", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "nameIsLowerCased()", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstruction()", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithDefaultAuthor()", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testRecordConstructionWithGivenAuthor()", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testExplicitDateFormatter()", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testLinkConstructionWithTemplate()", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testReverseLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.RecordTest", "name": "testUpdatingLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptyLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testReverseLinksWithMetaData()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testEmptySupercedes()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testSupercecedesMetaData()", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewMetadataTest", "name": "testLinkMetaData()", "time": 0.052, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreNewPopertiesFile()", "time": 0.141, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testStoreExistingPropertiesFile()", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.ADRPropertiesTest", "name": "testLoad()", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditMalformedId()", "time": 0.251, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditNonExistingADR()", "time": 0.197, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandEditTest", "name": "testEditADR()", "time": 0.172, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandLinkTest", "name": "testLinks()", "time": 0.0, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testOtherFilesInADRDirectory()", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testWithoutTitle()", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testSimpleCommand()", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.doble.adr.CommandNewTest", "name": "testManyADRs()", "time": 0.075, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/4a20ab8d-d8f8-40f0-b3f9-aecfe7ebe115/.github/workflows/gradle-crawler.yml", "type": "gradle"}, "workflow_name": "69bd9ef5-fc0b-4e17-a4a4-ccee4d716245", "build_tool": "gradle", "elapsed_time": 69.8645167350769, "default_actions": false}]], "strategy": "PASS_PASS", "issues": []}
