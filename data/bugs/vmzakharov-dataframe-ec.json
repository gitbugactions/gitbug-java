{"repository": "vmzakharov/dataframe-ec", "language": "java", "clone_url": "https://github.com/vmzakharov/dataframe-ec.git", "collection_timestamp": "2023-11-27T15:45:29.627073Z", "commit_hash": "12af99192d241ff9e4dcf78e92cef31117b7d05a", "commit_message": "imporves support for nested quotes (somewhat), add relevant unit tests\n", "commit_timestamp": "2023-02-09T03:07:17Z", "previous_commit_hash": "1109752c4e8a4e9574343e8c6df9bed78a5160ec", "previous_commit_message": "adds test for error messages\n", "previous_commit_timestamp": "2023-02-02T03:46:32Z", "time_to_patch": "6 days, 23:20:45", "bug_patch": "diff --git a/src/main/java/io/github/vmzakharov/ecdataframe/dsl/value/StringValue.java b/src/main/java/io/github/vmzakharov/ecdataframe/dsl/value/StringValue.java\nindex c2ee8fc..8ff1213 100644\n--- a/src/main/java/io/github/vmzakharov/ecdataframe/dsl/value/StringValue.java\n+++ b/src/main/java/io/github/vmzakharov/ecdataframe/dsl/value/StringValue.java\n@@ -30,7 +30,7 @@ extends AbstractValue\n     @Override\n     public String asStringLiteral()\n     {\n-        return '\"' + this.value + '\"';\n+        return this.value.indexOf('\\\"') == -1 ? '\"' + this.value + '\"' : '\\'' + this.value + '\\'';\n     }\n \n     @Override\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/io/github/vmzakharov/ecdataframe/ScriptFromStringTest.java b/src/test/java/io/github/vmzakharov/ecdataframe/ScriptFromStringTest.java\nindex 4fd6e45..61311b7 100644\n--- a/src/test/java/io/github/vmzakharov/ecdataframe/ScriptFromStringTest.java\n+++ b/src/test/java/io/github/vmzakharov/ecdataframe/ScriptFromStringTest.java\n@@ -173,4 +173,16 @@ public class ScriptFromStringTest\n         Assert.assertEquals(1, ((LongValue) result).longValue());\n     }\n \n+    @Test\n+    public void scriptWithMixedQuotes()\n+    {\n+        String scriptText =\n+                \"x = 'ba\\\"r'\\n\"\n+                + \"x in (\\\"qux\\\", 'ba\\\"r', 'baz', \\\"wal'do\\\")\";\n+\n+        AnonymousScript script = ExpressionTestUtil.toScript(scriptText);\n+        Value result = script.evaluate(new InMemoryEvaluationVisitor());\n+        Assert.assertTrue(result.isBoolean());\n+        Assert.assertTrue(((BooleanValue) result).isTrue());\n+    }\n }\ndiff --git a/src/test/java/io/github/vmzakharov/ecdataframe/StandaloneExpressionFromStringTest.java b/src/test/java/io/github/vmzakharov/ecdataframe/StandaloneExpressionFromStringTest.java\nindex f900bd9..7afefb4 100644\n--- a/src/test/java/io/github/vmzakharov/ecdataframe/StandaloneExpressionFromStringTest.java\n+++ b/src/test/java/io/github/vmzakharov/ecdataframe/StandaloneExpressionFromStringTest.java\n@@ -105,6 +105,7 @@ public class StandaloneExpressionFromStringTest\n         Assert.assertTrue(ExpressionTestUtil.evaluateToBoolean(\"\\\"foo\\\" in (\\\"foo\\\", \\\"bar\\\", \\\"baz\\\")\"));\n         Assert.assertFalse(ExpressionTestUtil.evaluateToBoolean(\"\\\"foo\\\" in (\\\"qux\\\", \\\"bar\\\", \\\"baz\\\")\"));\n         Assert.assertFalse(ExpressionTestUtil.evaluateToBoolean(\"'foo' in ('qux', 'bar', 'baz')\"));\n+        Assert.assertFalse(ExpressionTestUtil.evaluateToBoolean(\"'foo' in (\\\"qux\\\", 'ba\\\"r', 'baz', \\\"wal'do\\\")\"));\n         Assert.assertTrue(ExpressionTestUtil.evaluateToBoolean(\"123 in (456, 567, 123)\"));\n         Assert.assertFalse(ExpressionTestUtil.evaluateToBoolean(\"123 in (456, 567, 789)\"));\n         Assert.assertFalse(ExpressionTestUtil.evaluateToBoolean(\"123 in ()\"));\ndiff --git a/src/test/java/io/github/vmzakharov/ecdataframe/dsl/PrettyPrintingTest.java b/src/test/java/io/github/vmzakharov/ecdataframe/dsl/PrettyPrintingTest.java\nindex e6fb679..95eca01 100644\n--- a/src/test/java/io/github/vmzakharov/ecdataframe/dsl/PrettyPrintingTest.java\n+++ b/src/test/java/io/github/vmzakharov/ecdataframe/dsl/PrettyPrintingTest.java\n@@ -160,6 +160,17 @@ public class PrettyPrintingTest\n     }\n \n     @Test\n+    public void nestedQuotes()\n+    {\n+        String  expressionAsString = \"'foo' in (\\\"qux\\\", 'ba\\\"r', 'baz', \\\"wal'do\\\")\";\n+        Expression expression = ExpressionTestUtil.toExpression(expressionAsString);\n+\n+        String result = PrettyPrintVisitor.exprToString(expression);\n+\n+        Assert.assertEquals(\"(\\\"foo\\\" in (\\\"qux\\\", 'ba\\\"r', \\\"baz\\\", \\\"wal'do\\\"))\", result);\n+    }\n+\n+    @Test\n     public void expressionToString()\n     {\n         String expressionAsString = \"(1 + 2)/ (7.0 +9)\";\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.579, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.102, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 0.965, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.466, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.033, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.035, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.038, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.088, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.072, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.058, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.064, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.092, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/261e1199-e292-4023-a33a-940f89eea204/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "3b5aeb6e-0ccd-403c-a8d1-082aed1f4661", "build_tool": "maven", "elapsed_time": 38.248018741607666, "default_actions": false}], [{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 1.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 1.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "scriptWithMixedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "nestedQuotes", "time": 0.007, "results": [{"result": "Failure", "message": "expected:<(\"foo\" in (\"qux\", ['ba\"r'], \"baz\", \"wal'do\"))> but was:<(\"foo\" in (\"qux\", [\"ba\"r\"], \"baz\", \"wal'do\"))>", "type": "org.junit.ComparisonFailure"}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.018, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.316, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.061, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.035, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.1, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/261e1199-e292-4023-a33a-940f89eea204/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "95f061d9-ec91-415d-9f2f-3546cb5c1964", "build_tool": "maven", "elapsed_time": 41.57617473602295, "default_actions": false}], [{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.062, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.456, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.068, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 0.924, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "scriptWithMixedQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "nestedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.325, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.07, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.029, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/261e1199-e292-4023-a33a-940f89eea204/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "128c0bc3-fcee-4a65-ab5b-e8415c1114a0", "build_tool": "maven", "elapsed_time": 37.67418098449707, "default_actions": false}]], "strategy": "PASS_PASS", "issues": []}
{"repository": "vmzakharov/dataframe-ec", "language": "java", "clone_url": "https://github.com/vmzakharov/dataframe-ec.git", "collection_timestamp": "2023-11-27T15:50:27.445781Z", "commit_hash": "e9eb4dbe0e703e13f8597be61fde10e604de127d", "commit_message": "ensures consistency of null check results for column comparison\n", "commit_timestamp": "2023-04-01T18:37:07Z", "previous_commit_hash": "d11d1fdeaa72b654f50bd23ec5056f218b1e30b7", "previous_commit_message": "minor README correction\n", "previous_commit_timestamp": "2023-04-01T00:48:47Z", "time_to_patch": "17:48:20", "bug_patch": "diff --git a/src/main/java/io/github/vmzakharov/ecdataframe/dataframe/compare/ComparisonResult.java b/src/main/java/io/github/vmzakharov/ecdataframe/dataframe/compare/ComparisonResult.java\nindex 9558912..af740c8 100644\n--- a/src/main/java/io/github/vmzakharov/ecdataframe/dataframe/compare/ComparisonResult.java\n+++ b/src/main/java/io/github/vmzakharov/ecdataframe/dataframe/compare/ComparisonResult.java\n@@ -48,12 +48,12 @@ abstract public class ComparisonResult\n \n     public boolean leftIsNull()\n     {\n-        return this.nullSide == LEFT_NULL;\n+        return this.nullSide == LEFT_NULL || this.nullSide == BOTH_NULLS;\n     }\n \n     public boolean rightIsNull()\n     {\n-        return this.nullSide == RIGHT_NULL;\n+        return this.nullSide == RIGHT_NULL || this.nullSide == BOTH_NULLS;\n     }\n \n     public boolean noNulls()\n@@ -66,7 +66,7 @@ abstract public class ComparisonResult\n         return this.nullSide;\n     }\n \n-    public void nullSide(NullSide newNullSide)\n+    private void nullSide(NullSide newNullSide)\n     {\n         this.nullSide = newNullSide;\n     }\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/io/github/vmzakharov/ecdataframe/dataframe/DfColumnCompareTest.java b/src/test/java/io/github/vmzakharov/ecdataframe/dataframe/DfColumnCompareTest.java\nindex ab0e763..560edf7 100644\n--- a/src/test/java/io/github/vmzakharov/ecdataframe/dataframe/DfColumnCompareTest.java\n+++ b/src/test/java/io/github/vmzakharov/ecdataframe/dataframe/DfColumnCompareTest.java\n@@ -178,8 +178,16 @@ public class DfColumnCompareTest\n \n         DfCellComparator col1Comparator = df1.columnComparator(df2, \"col1\", \"col1\");\n         Assert.assertTrue(col1Comparator.compare(0, 0).rightIsNull());\n+        Assert.assertFalse(col1Comparator.compare(0, 0).leftIsNull());\n+        Assert.assertFalse(col1Comparator.compare(0, 0).noNulls());\n+\n         Assert.assertTrue(col1Comparator.compare(1, 1).leftIsNull());\n+\n         Assert.assertTrue(col1Comparator.compare(2, 2).bothAreNulls());\n+        Assert.assertTrue(col1Comparator.compare(2, 2).rightIsNull());\n+        Assert.assertTrue(col1Comparator.compare(2, 2).leftIsNull());\n+        Assert.assertFalse(col1Comparator.compare(2, 2).noNulls());\n+\n         Assert.assertTrue(col1Comparator.compare(3, 3).noNulls());\n \n         DfCellComparator col2Comparator = df1.columnComparator(df2, \"col2\", \"number\");\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.185, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.069, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "scriptWithMixedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "nestedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "dataFrameWrappedIndex", "time": 0.073, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.104, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.785, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "mismatchWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatchIgnoringOrder", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "dimensionMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnTypeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnHeaderMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatchWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someColumns", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "allColumns", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someOtherColumns", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "oneColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "indexIterate", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "emptyDataFrameForEach", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "dataFrameForEach", "time": 0.04, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "sortedDataFrameForEach", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.395, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.628, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/1d8382ab-5642-40fa-a605-c9fff9af5373/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "cb80e2c5-ee53-4cb1-b8fe-9a805f42202c", "build_tool": "maven", "elapsed_time": 42.894784688949585, "default_actions": false}], [{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.06, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.295, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.028, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.056, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.023, "results": [{"result": "Failure", "message": null, "type": "java.lang.AssertionError"}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "scriptWithMixedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "nestedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "dataFrameWrappedIndex", "time": 0.074, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.001, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.151, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.061, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.765, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.075, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.646, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.054, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "mismatchWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatchIgnoringOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "dimensionMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnTypeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnHeaderMismatch", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatchWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.032, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.031, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.039, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someColumns", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "allColumns", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someOtherColumns", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "oneColumn", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "indexIterate", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "emptyDataFrameForEach", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "dataFrameForEach", "time": 0.08, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "sortedDataFrameForEach", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.803, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/1d8382ab-5642-40fa-a605-c9fff9af5373/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "8848ee36-0255-4deb-94bb-189a24067ba6", "build_tool": "maven", "elapsed_time": 105.54040288925171, "default_actions": false}], [{"failed": false, "tests": [{"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionTypeWithCauseArg", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionType", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "errorPrinter", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultExceptionType", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "exceptionMessageByKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "defaultUnsupported", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideUnsupported", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.ExceptionFactoryTest", "name": "overrideExceptionTypeWithCauseArg", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelect", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithDefaults", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "simpleLookup", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliasesFluentAPI", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "multiColumnLookupMultiColumnSelectWithAliases", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameLookupJoinTest", "name": "lookupWithFluentApi", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting2", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting3", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ParserErrorReportingTest", "name": "simpleErrorReporting", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithFunctionDeclaration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "constantComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnUsingSimpleScript", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "externalEvalContext", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "doubleComputedColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithOutsideContext", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnFunction", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "stringComputedColumnSimple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "simpleColumnDependentExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "computedDateColumn", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedColumnsTest", "name": "usingScriptWithVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "mixedQuotedTokensAndNot", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithSpacesAndEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "splitStringWithFirstAndLastEmptyValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotesAndSpacesInVariousPlaces", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "simpleStringWithQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.SeparatedTextSplittingTest", "name": "stringWithQuotesAndFirstAndLastBlankValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullValue", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectIntoWithBreakOnNullResult", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.ColumnIteratorTest", "name": "injectInto", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "numberFormats", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "dateFormats", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFormatterTest", "name": "attemptToFormatString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithLimit", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsvWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameToStringTest", "name": "toCsv", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadBigDecimalLiteral", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeDefaultParsing", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMoreEmptyValues", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadDataWithSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyNoSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaOnLoad", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsExceptionWithCorrectLineNumber", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaMakeSureTheFirstLineProcessed", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromFirstTwoLines", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headMoreThanTotalLines", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "emptyHeaderThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnNameMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headFewerThanTotalLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat1", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingWithSchemaFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaAndThenLoad", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headerDataMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaWithMismatchedRowsFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "duplicateHeader", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaColumnCountMismatchThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersEnclosedInQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat1", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "dateParsingFormat3", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchema", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromNoDataLines", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadEmptyWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headZeroOrNegativeLines", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaFromOneDataLine", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "inferSchemaThenLoadWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "headersWithSpaces", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "loadData", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "noHeaderLineWithSchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadTest", "name": "schemaHeaderMismatchThrowsException", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "intTypeInference", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypes", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "scriptTypeInference", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypes", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalOnlyIfBranch", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "expressionIncompatibleTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalStatement", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "undefinedVariables", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "manyErrorsInOneScriptCatchesAllErrors", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "conditionalIncompatibleTypesWithContextVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "comparisonIncompatibleTypesWithContextVariables", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "containsIncompatibleTypes", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "doubleTypeInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "builtInFunctions", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "isNullInference", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "projectionInference", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "booleanTypeInference", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "withContext", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "functionTypeInference", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceTest", "name": "stringTypeInference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "expressions", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.DecimalExpressionTest", "name": "literals", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "indexIsSortedWhenAggregateIsSorted", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenNothingGetsSummed", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexOfComputedByComputed", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "sumWithIndexWhenEverythingIsSummed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithIndexTest", "name": "aggregateSameColumnWithIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "voidValuesComparisons", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateGte", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "dateLte", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringEq", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringGt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueCompareOpTest", "name": "stringLt", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByName", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValuesByNameWithDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationSameTest", "name": "constantValues", "time": 0.068, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumWithGroupingByTwoColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumNonNumericTriggersError", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "differentAggregationsAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "minAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageEmptyThrowsException", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "maxOfNegativeNumbersWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "countAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sameColumnDifferentAggregationsAll", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumOfAndByCalculatedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationFunctionNames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "averageAll", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "aggregationsAllWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "builtInAggregationSupportedTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationTest", "name": "sumEmptyWithCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggLong", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationErrorMessageTest", "name": "aggString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "stringContains", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "startsWith", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "withinDays", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toUpper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printWithVariableParameters", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDate", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "listAllFunctions", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "vectorFactory", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toStringFunction", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDecimal", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "abs", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "trim", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "substring", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "functionNamesNotCaseSensitive", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "printFunction", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDateTime", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.BuiltInFunctionTest", "name": "toDouble", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "parseDate", "time": 0.018, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.DateExpressionTest", "name": "dateProximity", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addRowsThenColumnsWithData", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithDataThenRows", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAddColumnWithDataTest", "name": "addColumnsWithData", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareSortedDataFrames", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "simpleCompare", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareWithOverflow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DfColumnCompareTest", "name": "compareToSameDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "stringExpression", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameExpressionTest", "name": "arithmeticExpression", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignmentsWithHangingExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "inOperator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "scriptWithMixedQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatementAsExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNamesWithQuotes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "escapedVariableNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "nestedIfStatement", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "simpleAssignments", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatement", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ScriptFromStringTest", "name": "ifStatementAsExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.function.RuntimeAddedFunctionTest", "name": "simple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printConditionWithTernary", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printTernaryOperator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "script", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printFunctionCalls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "expressionToString", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printCondition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "scriptWithFunctionDeclaration", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "nestedQuotes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "weirdVariableNames", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.PrettyPrintingTest", "name": "printProjection", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "dataFrameWrappedIndex", "time": 0.116, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnDifferentTypesIndex", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "oneColumnIndex", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIndexTest", "name": "multiColumnIndex", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "longValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "stringValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "compareToNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ValueCompareTest", "name": "doubleValueCompare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithOneSideHanging", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinDifferentSizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithDateKey", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoin", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByComputedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithAllRowsMatching", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMismatchedKeys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinByLongColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithMismatchedKeys", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithBothSidesHanging", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinToEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "outerJoinWithNameCollision", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyOuterJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinEmptyToEmpty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "joinWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoin", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "duplicateMatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "simpleJoinWithNameConfusion", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameJoinTest", "name": "multipleKeyJoinWithMismatchedKeys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "StringValuesWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DataFrameValuesCannotWrapNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "voidValueMakesSense", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DateTimeValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "DecimalValuesCannotWrapNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.value.ValueTest", "name": "booleansMakeSense", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "numericValueNulls", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithNullsTest", "name": "functionsAndCalculationsWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copyWholeDataFrame", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchema", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySchemaConvertComputedToStored", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameCopyTest", "name": "copySomeColumnsToANewDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "vectorExpression", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "singleElementVectorExpression", "time": 0.002, "results": [{"result": "Skipped", "message": null, "type": null}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "noArgFunctionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "functionCall", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "projectionWithAlias", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "assignment", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.SimpleExpressionParsingTest", "name": "negativeNumber", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDataFromZip", "time": 0.185, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameLoadFromZippedTest", "name": "loadDateFromGZip", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "simpleFunction", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "manyFunctions", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.FunctionDeclarationsTest", "name": "noArgFunction", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepNonExistingColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn2", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "sealingMisshapenDataFrame", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNull", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "newColumn", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "escapingColumnNames", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropNonExistingColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "addColumn", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "keepColumns", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropManyColumns", "time": 0.153, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "dropFirstAndLastColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "createSimpleDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.BasicDataFrameTest", "name": "isEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationAverage", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationCount", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "computedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMax", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationMin", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSum", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameWithDecimalColumnTest", "name": "aggregationSame", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectionWithComputedFields", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndReject", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "simpleSelection", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameFilterTest", "name": "selectAndRejectWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concatByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "concat", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengths", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithCustomFunctionsTest", "name": "sumStringLengthsByName", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjectionWithDates", "time": 0.1, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleProjection", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "typeInference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "simpleDataSetOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "nestedObjectProjection", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "dataSetOperationsWithPropertyChain", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.projection.HierarchicalDataSetProjectionTest", "name": "projectionWithBigNumbers", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForNullValueInList", "time": 0.281, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringFunctions", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOperatorsOrderSensitive", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "arithmetic", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "stringOps", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "lookingForValueInListWithNulls", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ExpressionWithNullValuesTest", "name": "conditional", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSort", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByExpression", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "simpleOneColumnSort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDate", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "oneColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "columnSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "multiColumnSortWithNullValues", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByMissingColumnsNotAllowed", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortEmptyDataFrameByColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "expressionSortIsStable", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortTest", "name": "sortByExpression", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "sort", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.TupleCompareTest", "name": "compare", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsEmpty", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "vectorIsEmptyOrNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueNotIsNotEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "dateIsEmptyOrNot", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "voidValueIsNull", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.IsEmptyOperationTest", "name": "stringIsEmptyOrNot", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrder", "time": 0.067, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "simpleTest", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollisionWithSort", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "calculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "withAdditionalSortOrderAndNullValues", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "joiningByDifferentNumberOfKeysThrows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "complementsAreEmpty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.IntersectionAndDifferencesTest", "name": "columnNameCollision", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByExpressionDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortWithNullValuesMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "columnSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortByComputedColumns", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "multiColumnSortMixedOrder", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "oneColumnSortWithNullValuesDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "expressionSortIsStable", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "sortEmptyDataFrameByExpressionDescending", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameSortDirectionTest", "name": "simpleOneColumnSortDescending", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "sumOfAndByCalculatedColumnsWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsArePoisonousTest", "name": "aggregationsAllWithCalculatedColumnsWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "mismatchWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMatchIgnoringOrder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "dimensionMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnTypeMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "simpleMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "columnHeaderMismatch", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.util.DataFrameCompareTest", "name": "decimalMismatchWithNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "ternaryOperator", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numbers", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperation", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "intsAndDoubles", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "operationOrder", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "incompatibleComparison", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "numberComparisonOperationMixedTypes", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringParsing", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "stringComparisonOperations", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperationForStrings", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "booleanOperation", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notInOperation", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "inOperationMixedNumericTypes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.StandaloneExpressionFromStringTest", "name": "notOperation", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericCharsCommaDecimalSeparator", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "loadDecimalFormat", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "doubleFormatWithQuotesAndNegativeParens", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "printDecimalFormat", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "longFormatWithQuoteAndSeparator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.FormattedColumnsTest", "name": "ignoreNonNumericChars", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringVectorNotIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "dateVectorNotIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dsl.ObjectValueContainsOpTest", "name": "stringIn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionWithNulls", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "markRowsBasedOnExpression", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfNotFlaggedRows", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectWhenNothingFlagged", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameBitmapTest", "name": "selectionOfFlaggedRowsOnSortedDataFrame", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDate", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "typeMismatch", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDouble", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDecimal", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedString", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameComputedWithInferredTypeTest", "name": "computedDateTime", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someColumns", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "allColumns", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "someOtherColumns", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameDistinctTest", "name": "oneColumn", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "repeatingPlaceholders", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withResourceBundle", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "noPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "onePlaceholder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withProperties", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "missingPlaceholder", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "manyPlaceholders", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "unknownKey", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.util.FormatWithPlaceholderTest", "name": "withMap", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "indexIterate", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "emptyDataFrameForEach", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "dataFrameForEach", "time": 0.049, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameIterateTest", "name": "sortedDataFrameForEach", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.ImmutableVariablesTest", "name": "immutableVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithoutHeaderLine", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeNoSchema", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeDateTimeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchema", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataset.DataFrameWriteTest", "name": "writeWithSchemaPipeNullMarkers", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "mixedGroupingSimple", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "averageWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGroupingByTwoColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "differentAggregationsWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "minGroupingSimple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingOneRow", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGrouping", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "sumOfAndByCalculatedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "maxGroupingSimple", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationWithGroupByTest", "name": "multiAggWithGroupingSimple", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "intAddition", "time": 0.212, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "stringAddition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.HandcraftedExpressionTreeTest", "name": "doubleAddition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithFunction", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "indexWithVariables", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.VectorExpressionTest", "name": "vectorVariableIn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNullsWithGrouping", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "countNulls", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameAggregationNullsAreOkayTest", "name": "sumIgnoringNullsWithGrouping", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "startswith", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toUpper", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "substr", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDate", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toLong", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "contains", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toStringFunction", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "abs", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "functionAddedAtRuntime", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDateTime", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.TypeInferenceForBuiltInFunctionsTest", "name": "toDobule", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails2", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "simpleUnion", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedColumns", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfSorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithConstantComputedColumn", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithNulls", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionOfEmptyWithComputedColumns", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedSchemasFails", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithMismatchedTypesFails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "io.github.vmzakharov.ecdataframe.dataframe.DataFrameUnionTest", "name": "unionWithComputedNulls", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/1d8382ab-5642-40fa-a605-c9fff9af5373/.github/workflows/maven-verify-crawler.yml", "type": "maven"}, "workflow_name": "30542052-a78c-4aed-b33a-5c3321410bad", "build_tool": "maven", "elapsed_time": 221.79207110404968, "default_actions": false}]], "strategy": "PASS_PASS", "issues": []}
