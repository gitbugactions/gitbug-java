{"repository": "assertj/assertj-vavr", "language": "java", "clone_url": "https://github.com/assertj/assertj-vavr.git", "collection_timestamp": "2023-11-24T14:03:21.347370Z", "commit_hash": "f4d7f276e87c5612bd743d0fd21f947d059170f8", "commit_message": "Fix: use custom element comparator when provided for SeqAssertions (#188)\n\n", "commit_timestamp": "2023-01-09T07:23:57Z", "previous_commit_hash": "cd521160aae3675f8427d13b8e0db4b137dc3082", "previous_commit_message": "Bump assertj-core from 3.24.0 to 3.24.1 (#192)\n\nBumps assertj-core from 3.24.0 to 3.24.1.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.assertj:assertj-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>", "previous_commit_timestamp": "2023-01-09T06:36:26Z", "time_to_patch": "0:47:31", "bug_patch": "diff --git a/src/main/java/org/assertj/vavr/api/AbstractSeqAssert.java b/src/main/java/org/assertj/vavr/api/AbstractSeqAssert.java\nindex 7353dab..bc8d763 100644\n--- a/src/main/java/org/assertj/vavr/api/AbstractSeqAssert.java\n+++ b/src/main/java/org/assertj/vavr/api/AbstractSeqAssert.java\n@@ -19,6 +19,7 @@ import org.assertj.core.api.IndexedObjectEnumerableAssert;\n import org.assertj.core.data.Index;\n import org.assertj.core.internal.ComparatorBasedComparisonStrategy;\n import org.assertj.core.internal.ComparisonStrategy;\n+import org.assertj.core.internal.Iterables;\n import org.assertj.core.internal.StandardComparisonStrategy;\n import org.assertj.core.util.CheckReturnValue;\n \n@@ -67,6 +68,7 @@ abstract class AbstractSeqAssert<SELF extends AbstractSeqAssert<SELF, ACTUAL, EL\n      */\n     @CheckReturnValue\n     public SELF usingElementComparator(Comparator<? super ELEMENT> customComparator) {\n+        this.iterables = new Iterables(new ComparatorBasedComparisonStrategy(customComparator));\n         seqElementComparisonStrategy = new ComparatorBasedComparisonStrategy(customComparator);\n         return myself;\n     }\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/org/assertj/vavr/api/SeqAssert_containsExactly_inAnyOrder_Test.java b/src/test/java/org/assertj/vavr/api/SeqAssert_containsExactly_inAnyOrder_Test.java\nindex a0de5e9..3654c00 100644\n--- a/src/test/java/org/assertj/vavr/api/SeqAssert_containsExactly_inAnyOrder_Test.java\n+++ b/src/test/java/org/assertj/vavr/api/SeqAssert_containsExactly_inAnyOrder_Test.java\n@@ -33,6 +33,15 @@ class SeqAssert_containsExactly_inAnyOrder_Test {\n     }\n \n     @Test\n+    void should_pass_if_List_contains_exactly_elements_in_any_order_using_element_comparator() {\n+        final Set<String> expectedInAnyOrder = HashSet.of(\"other\", \"and\", \"else\", \"something\");\n+        final List<String> uppercaseList = expectedInAnyOrder.map(String::toUpperCase).toList().reverse();\n+        assertThat(uppercaseList)\n+                .usingElementComparator(String::compareToIgnoreCase)\n+                .containsExactlyInAnyOrder(expectedInAnyOrder);\n+    }\n+\n+    @Test\n     void should_fail_when_List_is_null() {\n         final Set<String> expectedInAnyOrder = HashSet.of(\"other\", \"and\", \"else\", \"something\");\n         assertThatThrownBy(\ndiff --git a/src/test/java/org/assertj/vavr/api/soft/JUnitSoftVavrAssertionsFailureTest.java b/src/test/java/org/assertj/vavr/api/soft/JUnitSoftVavrAssertionsFailureTest.java\nindex 4fa4447..9459721 100644\n--- a/src/test/java/org/assertj/vavr/api/soft/JUnitSoftVavrAssertionsFailureTest.java\n+++ b/src/test/java/org/assertj/vavr/api/soft/JUnitSoftVavrAssertionsFailureTest.java\n@@ -44,7 +44,7 @@ public class JUnitSoftVavrAssertionsFailureTest {\n         // THEN\n         List<Throwable> failures = multipleFailuresError.getFailures();\n         assertThat(failures).hasSize(2);\n-        assertThat(failures.get(0)).hasMessageStartingWith(format(\"[contains] %nExpecting:%n  <Left(something)>%nto contain:%n  <\\\"else\\\">%nbut did not.\"));\n+        assertThat(failures.get(0)).hasMessageStartingWith(format(\"[contains] %nExpecting:%n  <Left(something)>%nto contain:%n  <\\\"else\\\"> on the [LEFT]%nbut did not.\"));\n         assertThat(failures.get(1)).hasMessageStartingWith(format(\"[instance] %nExpecting:%n\" +\n                 \" <Left>%n\" +\n                 \"to contain a value that is an instance of:%n\" +\n@@ -53,4 +53,4 @@ public class JUnitSoftVavrAssertionsFailureTest {\n                 \" <java.lang.String>\"));\n     }\n \n-}\n\\ No newline at end of file\n+}\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.26, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.112, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_and_entries_have_different_sizes", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries_in_same_order", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_contains_given_entries_in_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_pass_if_Either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_when_Either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_if_Either_is_left", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_and_entries_have_different_sizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries_in_same_order", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_contains_given_entries_in_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_pass_if_Validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_key_as_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_all_Map_entries_do_not_satisfy_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_all_Map_entries_satisfy_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Multimap_size_with_non_array_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Multimap_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_pass_if_validation_contains_expected_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_does_not_contain_expected_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_not_all_expected_elements", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_pass_if_List_contains_exactly_elements_in_any_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_expected_elements_param_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_more_than_expected_elements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_failure", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_pass_when_try_is_success", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_fail_when_option_is_null", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_contains_a_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_valid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_pass_if_either_contains_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_pass_if_Multimap_contains_only_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_contains_more_than_given_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_pass_if_List_contains_expected_value_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_List_contains_no_expected_element_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_expected_values_are_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.173, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.084, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_any_of_entries", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_contains_any_of_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_pass_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_left_than_required", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_right", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_left", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_pass_if_Map_contains_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_if_Map_does_not_contain_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Multimapis_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_pass_if_List_has_at_given_index_value_fulfilling_provided_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_List_has_at_given_index_element_not_matching_given_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 1.484, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.024, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_if_Map_contains_a_given_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_pass_if_Multimap_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_if_Multimap_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Multimap_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_contains_more_than_given_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_Multimap_contains_some_of_given_values", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_contains_more_than_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Map_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_invalid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_contains_a_value", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_fail_when_Option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_pass_if_element_on_List_at_given_index_is_value_fulfilling_provided_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_provided_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_element_on_List_at_given_index_is_not_value_fulfilling_provided_condition", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_pass_if_Multimap_contains_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_if_Multimap_does_not_contain_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_pass_when_try_is_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_success", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_not_sorted", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_elements_cannot_be_compared", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_when_List_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.27, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_pass_if_either_contains_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_does_not_contain_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Map_contains_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_pass_if_Map_contains_only_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_contains_more_than_given_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_not_met", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_condition_is_met", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_success_try_contains_value_of_different_class", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_pass_when_success_try_contains_value_of_expected_class", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_Multimap_does_not_contain_all_given_values", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_pass_if_Multimap_contains_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_pass_when_Lazy_is_evaluated", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_not_evaluated", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_pass_if_Map_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_pass_if_Map_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_right_than_required", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_pass_if_Multimap_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_if_Set_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_pass_if_Set_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.181, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_Map_contains_some_of_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_null_as_key", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_null_as_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_does_not_contain_expected_valid_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_pass_if_validation_contains_expected_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_reason_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_success", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.082, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_all_Set_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_Set_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_all_Set_elements_do_not_satisfy_consumer", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_when_Set_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_if_Set_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_pass_if_Set_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_from_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_pass_when_consumer_passes", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_pass_if_List_does_not_contain_provided_value_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_List_contains_provided_element_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Multimap_does_not_contain_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_null_as_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_null_as_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Multimap_contains_entry_satisfying_condition", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_does_not_contain_entry_satisfying_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_all_Multimap_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_all_Multimap_entries_do_not_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.223, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Map_does_not_contain_given_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_invalid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.291, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_does_not_contain_any_of_entries", "time": 0.034, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Map_contains_any_of_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_Map_does_not_contain_all_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_pass_if_Map_contains_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_pass_if_List_satisfy_condition_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_List_does_not_satisfies_condition_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_condition_to_satisfy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_contains_equal_but_not_same_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_does_not_contain_the_expected_object_reference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_when_option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_pass_if_option_contains_the_expected_object_reference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_is_empty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_reason_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_success", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_pass_when_Option_is_present", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_equal_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_is_left", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_pass_if_either_contains_same_instance_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_right_side", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_pass_if_either_contains_expected_value_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_null_success_try_checked_on_containing_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_not_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_success_try_contains_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_if_Option_is_present", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_pass_if_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_when_Option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.337, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 0.926, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_if_Multimap_contains_a_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_either_is_left", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Map_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_is_empty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Map_has_same_size_as_given_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Map_size_with_non_array_type", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_pass_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_if_Validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Map_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_is_empty", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_comparator_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_when_Either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_pass_if_Either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_if_Either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_pass_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_pass_when_Lazy_is_not_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/bccab3d6-a845-47ee-8a88-dccb58014a85/.github/workflows/build-crawler.yml", "type": "maven"}, "workflow_name": "faf7f16a-4798-4eff-8b4d-b10a67beb5a7", "build_tool": "maven", "elapsed_time": 79.26887583732605, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.266, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.105, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_and_entries_have_different_sizes", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries_in_same_order", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_contains_given_entries_in_order", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_pass_if_Either_is_right", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_when_Either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_if_Either_is_left", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_and_entries_have_different_sizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries_in_same_order", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_contains_given_entries_in_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_pass_if_Validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_key_as_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_all_Map_entries_do_not_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_all_Map_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Multimap_size_with_non_array_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Multimap_contains_the_given_entry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_pass_if_validation_contains_expected_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_does_not_contain_expected_invalid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_not_all_expected_elements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_pass_if_List_contains_exactly_elements_in_any_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_expected_elements_param_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_pass_if_List_contains_exactly_elements_in_any_order_using_element_comparator", "time": 0.014, "results": [{"result": "Failure", "message": "\nExpecting actual:\n  List(SOMETHING, ELSE, AND, OTHER)\nto contain exactly in any order:\n  [\"other\", \"and\", \"else\", \"something\"]\nelements not found:\n  [\"other\", \"and\", \"else\", \"something\"]\nand elements not expected:\n  [\"SOMETHING\", \"ELSE\", \"AND\", \"OTHER\"]\n", "type": "java.lang.AssertionError"}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_more_than_expected_elements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_failure", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_pass_when_try_is_success", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_contains_a_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_valid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_pass_if_either_contains_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_pass_if_Multimap_contains_only_given_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_contains_more_than_given_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_pass_if_List_contains_expected_value_at_given_index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_List_contains_no_expected_element_at_given_index", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_expected_values_are_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.2, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.071, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_any_of_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_contains_any_of_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_pass_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_valid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_left_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_pass_if_Map_contains_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Multimapis_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_pass_if_List_has_at_given_index_value_fulfilling_provided_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_List_has_at_given_index_element_not_matching_given_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 1.679, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_if_Map_contains_a_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_pass_if_Multimap_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_if_Multimap_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Multimap_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_contains_more_than_given_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_Multimap_contains_some_of_given_values", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_contains_more_than_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Map_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_invalid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_contains_a_value", "time": 0.047, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_fail_when_Option_is_null", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_pass_if_element_on_List_at_given_index_is_value_fulfilling_provided_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_provided_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_element_on_List_at_given_index_is_not_value_fulfilling_provided_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_pass_if_Multimap_contains_given_value", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_if_Multimap_does_not_contain_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_pass_when_try_is_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_success", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_not_sorted", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_elements_cannot_be_compared", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.291, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_pass_if_either_contains_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_does_not_contain_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Map_contains_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_does_not_contain_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_pass_if_Map_contains_only_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_contains_more_than_given_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_not_met", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_condition_is_met", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_success_try_contains_value_of_different_class", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_pass_when_success_try_contains_value_of_expected_class", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_Multimap_does_not_contain_all_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_pass_if_Multimap_contains_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_pass_when_Lazy_is_evaluated", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_not_evaluated", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_pass_if_Map_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_pass_if_Map_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_left", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_right", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_right_than_required", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_pass_if_Multimap_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_if_Set_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_pass_if_Set_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.146, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_Map_contains_some_of_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_null_as_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_null_as_key", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_does_not_contain_expected_valid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_pass_if_validation_contains_expected_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_reason_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_success", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.089, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_all_Set_entries_satisfy_consumer", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_Set_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_all_Set_elements_do_not_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_when_Set_is_null", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_if_Set_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_pass_if_Set_is_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_from_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_null", "time": 0.065, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_pass_when_consumer_passes", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_pass_if_List_does_not_contain_provided_value_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_List_contains_provided_element_at_given_index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Multimap_does_not_contain_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_null_as_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_null_as_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Multimap_contains_entry_satisfying_condition", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_does_not_contain_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_all_Multimap_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_all_Multimap_entries_do_not_satisfy_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.238, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Map_does_not_contain_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_invalid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_invalid_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.254, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_does_not_contain_any_of_entries", "time": 0.052, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Map_contains_any_of_entries", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_Map_does_not_contain_all_given_values", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_pass_if_Map_contains_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_pass_if_List_satisfy_condition_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_List_does_not_satisfies_condition_at_given_index", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_condition_to_satisfy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_contains_equal_but_not_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_does_not_contain_the_expected_object_reference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_when_option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_pass_if_option_contains_the_expected_object_reference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_null", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_reason_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_success", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_pass_when_Option_is_present", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_equal_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_pass_if_either_contains_same_instance_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_right_side", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_pass_if_either_contains_expected_value_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_left_side", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_null_success_try_checked_on_containing_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_not_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_success_try_contains_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_if_Option_is_present", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_pass_if_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_when_Option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.415, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 0.925, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_if_Multimap_contains_a_given_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_either_is_left", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Map_contains_the_given_entry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_is_empty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Map_has_same_size_as_given_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Map_size_with_non_array_type", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_pass_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_if_Validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Map_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_is_empty", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_comparator_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_when_Either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_pass_if_Either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_if_Either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_pass_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_pass_when_Lazy_is_not_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/bccab3d6-a845-47ee-8a88-dccb58014a85/.github/workflows/build-crawler.yml", "type": "maven"}, "workflow_name": "22039b98-607e-43d0-ac34-acb78fda275e", "build_tool": "maven", "elapsed_time": 69.26082181930542, "default_actions": false}], [{"failed": false, "tests": [{"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.248, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Seq_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.293, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Multimap_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_and_entries_have_different_sizes", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries_in_same_order", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_pass_if_Multimap_contains_given_entries_in_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsExactly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_pass_if_Either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_when_Either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isRight_Test", "name": "should_fail_if_Either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_and_entries_have_different_sizes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries_in_same_order", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsExactly_Test", "name": "should_pass_if_Map_contains_given_entries_in_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_when_Map_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSize_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_pass_if_Validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isInvalid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_given_key", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_fail_if_Map_does_not_contain_key_as_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKey_Test", "name": "should_pass_if_Map_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_all_Map_entries_do_not_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_allSatisfy_Test", "name": "should_pass_if_all_Map_entries_satisfy_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Multimap_size_with_non_array_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Multimap_contains_the_given_entry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_when_validation_is_null", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_pass_if_validation_contains_expected_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_Test", "name": "should_fail_if_validation_does_not_contain_expected_invalid_value", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_not_all_expected_elements", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_pass_if_List_contains_exactly_elements_in_any_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_expected_elements_param_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_pass_if_List_contains_exactly_elements_in_any_order_using_element_comparator", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_if_list_contains_more_than_expected_elements", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_containsExactly_inAnyOrder_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_failure", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_pass_when_try_is_success", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isSuccess_Test", "name": "should_fail_when_try_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_flatMap_Test", "name": "should_pass_when_option_contains_a_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_valid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_pass_if_either_contains_same_instance_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftSame_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_pass_if_Multimap_contains_only_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnly_Test", "name": "should_fail_if_Multimap_contains_more_than_given_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSize_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_pass_if_List_contains_expected_value_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_List_contains_no_expected_element_at_given_index", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_expected_values_are_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_contains_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.215, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Lazy_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.089, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Option_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_pass_if_Map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_does_not_contain_any_of_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Multimap_contains_any_of_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_Multimap_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_pass_if_Multimap_does_not_contain_the_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_entries_parameter_are_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContain_entries_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_pass_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNotEmpty_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasLeftValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_left_than_required", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_fail_if_either_is_right", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeftInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_left", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_key_as_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_key_as_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_pass_if_Multimap_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_if_Multimap_does_not_contain_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_pass_if_Map_contains_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValue_Test", "name": "should_fail_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Multimap_does_not_contain_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_contains_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Multimap_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Multimapis_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_pass_if_List_has_at_given_index_value_fulfilling_provided_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_has_atIndex_Test", "name": "should_fail_if_List_has_at_given_index_element_not_matching_given_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 1.617, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.026, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.037, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[11]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[12]", "time": 0.021, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[13]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[14]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[15]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[16]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[17]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[10]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[11]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[12]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[13]", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[14]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[15]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[16]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Map_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[17]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_if_Map_contains_a_given_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValue_Test", "name": "should_pass_if_Map_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_right_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_either_is_left_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_right_sided_either_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnRight_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_pass_if_Multimap_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_if_Multimap_does_not_contain_the_given_entry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsEntry_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_contains_other_type_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_pass_if_option_contains_required_type", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsInstanceOf_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Multimap_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_has_same_size_but_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Multimap_contains_more_than_given_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_Multimap_contains_some_of_given_values", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_contains_more_than_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnlyKeys_Test", "name": "should_pass_if_Map_contains_only_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_required_type_subclass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_contains_other_type_than_required", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_fail_if_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidInstanceOf_Test", "name": "should_pass_if_validation_contains_invalid_value_of_required_type", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_pass_when_Option_contains_a_value", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_map_Test", "name": "should_fail_when_Option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_pass_if_element_on_List_at_given_index_is_value_fulfilling_provided_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_provided_condition_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_if_element_on_List_at_given_index_is_not_value_fulfilling_provided_condition", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_is_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_pass_if_Multimap_contains_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_allow_to_check_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValue_Test", "name": "should_fail_if_Multimap_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_pass_when_try_is_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_isFailure_Test", "name": "should_fail_when_try_is_success", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_is_not_sorted", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_if_elements_cannot_be_compared", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSorted_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.252, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Either_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_pass_if_either_contains_expected_value_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRight_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.SoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 0.07, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_does_not_contain_entry_satisfying_condition", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Map_contains_entry_satisfying_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Map_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_has_same_size_but_contains_different_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_pass_if_Map_contains_only_given_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_entries_parameter_is_empty_but_actual_Map_is_not", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsOnly_Test", "name": "should_fail_if_Map_contains_more_than_given_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEmpty_Test", "name": "should_fail_if_Map_is_not_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_condition_is_not_met", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_condition_is_met", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_success_try_contains_value_of_different_class", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_pass_when_success_try_contains_value_of_expected_class", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsInstanceOf_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_Multimap_does_not_contain_all_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsValues_Test", "name": "should_pass_if_Multimap_contains_given_values", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_pass_if_left_sided_either_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_left_sided_either_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_if_either_is_right_sided", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsOnLeft_usingValueComparator_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_pass_when_Lazy_is_evaluated", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_not_evaluated", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_pass_if_Map_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_fail_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsEntry_Test", "name": "should_pass_if_Map_contains_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_subclass_on_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_pass_if_either_contains_required_type_on_right", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightInstanceOf_Test", "name": "should_fail_if_either_contains_other_type_on_right_than_required", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_containsKeys_Test", "name": "should_pass_if_Multimap_contains_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_fail_if_Set_is_not_empty", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_isEmpty_Test", "name": "should_pass_if_Set_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.108, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Validation_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_Map_contains_some_of_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainValues_Test", "name": "should_pass_if_Map_does_not_contain_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_null_as_key", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_pass_if_Map_does_not_contain_null_as_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKey_Test", "name": "should_fail_if_Map_contains_given_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_fail_if_validation_does_not_contain_expected_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_Test", "name": "should_pass_if_validation_contains_expected_valid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_reason_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failBecauseOf_Test", "name": "should_fail_when_try_is_success", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.102, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Try_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_when_Set_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_all_Set_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_pass_if_Set_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_allSatisfy_Test", "name": "should_fail_if_all_Set_elements_do_not_satisfy_consumer", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_when_Set_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_fail_if_Set_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SetAssert_hasSize_Test", "name": "should_pass_if_Set_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_from_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_pass_when_consumer_passes", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_hasValueSatisfying_Test", "name": "should_fail_when_option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Multimap_is_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_pass_if_List_does_not_contain_provided_value_at_given_index", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_if_List_contains_provided_element_at_given_index", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_doesNotContain_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_failure", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_value_does_not_satisfy_consumer", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_hasValueSatisfying_Condition_Test", "name": "should_pass_when_value_satisfies_consumer", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Multimap_does_not_contain_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Multimap_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_pass_if_option_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_when_option_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_contains_usingValueComparator_Test", "name": "should_fail_if_option_does_not_contain_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_null_as_key", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_pass_if_Multimap_does_not_contain_null_as_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainKey_Test", "name": "should_fail_if_Multimap_contains_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_does_not_contain_given_key", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_pass_if_Multimap_contains_entry_satisfying_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_condition_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_does_not_contain_entry_satisfying_condition", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasEntrySatisfying_Test", "name": "should_fail_if_Multimap_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_consumer_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_pass_if_all_Multimap_entries_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_allSatisfy_Test", "name": "should_fail_if_all_Multimap_entries_do_not_satisfy_consumer", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[1]", "time": 0.176, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[3]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[4]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[5]", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[7]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[8]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_run_test_when_assumption_passes{AssumptionRunner}[9]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[1]", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[2]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[3]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[4]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[5]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[6]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[7]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[8]", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.Set_assertion_methods_in_assumptions_Test", "name": "should_ignore_test_when_assumption_fails{AssumptionRunner}[9]", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_Map_contains_different_keys", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_fail_if_keys_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainKeys_Test", "name": "should_pass_if_Map_does_not_contain_given_keys", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_does_not_contain_same_instance_as_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_when_validation_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_validation_is_valid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalidSame_Test", "name": "should_pass_if_validation_contains_same_instance_as_invalid_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Multimap_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Multimap_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_fail_if_Map_is_equal_to", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isNotEqualTo_Test", "name": "should_pass_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeLessThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_entries_parameter_null", "time": 0.416, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_when_Map_is_null", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_does_not_contain_any_of_entries", "time": 0.045, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_contains_anyOf_entries_Test", "name": "should_pass_if_Map_contains_any_of_entries", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_if_Map_is_not_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultiMapAssert_isEqualTo_Test", "name": "should_pass_if_Map_is_equal_to", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_Map_does_not_contain_all_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_pass_if_Map_contains_given_values", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsValues_Test", "name": "should_fail_if_values_parameter_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_pass_if_List_satisfy_condition_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_given_index_is_greater_than_list_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_if_List_does_not_satisfies_condition_at_given_index", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_condition_to_satisfy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_satisfies_atIndex_Test", "name": "should_fail_when_List_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_contains_equal_but_not_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_does_not_contain_the_expected_object_reference", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_when_option_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_pass_if_option_contains_the_expected_object_reference", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_containsSame_Test", "name": "should_fail_if_option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_fail_if_Multimap_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_when_Multimap_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_isNullOrEmpty_Test", "name": "should_pass_if_Multimap_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_pass_when_try_fail_with_specific_reason", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_reason_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_failReasonHasMessage_Test", "name": "should_fail_when_try_is_success", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_empty", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_fail_when_Option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isDefined_Test", "name": "should_pass_when_Option_is_present", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_try_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_equal_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_pass_when_success_try_contains_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_pass_if_Map_is_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSizeGreaterThan_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_expected_value_is_null", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_pass_if_invalid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsInvalid_usingValueComparator_Test", "name": "should_fail_if_invalid_validation_does_not_contain_expected_value", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_validation_is_invalid", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_when_validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_fail_if_valid_validation_does_not_contain_expected_value", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_containsValid_usingFieldByFieldValueComparator_Test", "name": "should_pass_if_valid_validation_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_is_left", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_pass_if_either_contains_same_instance_on_right_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_if_either_does_not_contain_same_instance_on_right_side", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsRightSame_Test", "name": "should_fail_when_either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_is_right", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_pass_if_either_contains_expected_value_on_left_side", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_if_either_does_not_contain_expected_value_on_left_side", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_containsLeft_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_entries_parameter_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_one_of_entries_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_map_and_entries_parameter_are_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_pass_if_Map_contains_all_entries", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_does_not_contain_all_entries", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_containsAllEntriesOf_Test", "name": "should_fail_if_Map_is_not_empty_and_entries_is_an_empty_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_a_failure", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_null_success_try_checked_on_containing_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_expected_value_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_not_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_pass_when_success_try_contains_the_same_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_containsSame_Test", "name": "should_fail_when_success_try_contains_different_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_if_Option_is_present", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_pass_if_Option_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.OptionAssert_isEmpty_Test", "name": "should_fail_when_Option_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "all_assertions_should_pass", "time": 0.432, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.soft.AutoCloseableSoftVavrAssertionsTest", "name": "should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods", "time": 1.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_null_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_pass_if_Multimap_does_not_contain_given_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_if_Multimap_contains_a_given_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MultimapAssert_doesNotContainValue_Test", "name": "should_fail_when_Multimap_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_either_is_left", "time": 0.006, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_if_consumer_fails", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_pass_if_consumer_passes", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_hasRightValueSatisfying_Test", "name": "should_fail_when_either_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_does_not_contain_the_given_entry", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_fail_if_Map_contains_the_given_entry", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_doesNotContainEntry_Test", "name": "should_pass_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_array_to_compare_with_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_pass_if_Map_has_same_size_as_given_array", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_comparing_Map_size_with_non_array_type", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Array_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_pass_if_Validation_is_valid", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_if_Validation_is_invalid", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.ValidationAssert_isValid_Test", "name": "should_fail_when_Validation_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_pass_if_Map_has_same_size_as_given_iterable", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_when_Map_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_Map_is_not_of_expected_size", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_hasSameSizeAs_Iterable_Test", "name": "should_fail_if_iterable_to_compare_with_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_is_empty", "time": 0.02, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_is_sorted_not_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_if_List_contains_no_comparable_elements", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_pass_if_List_contains_element_sorted_in_comparator_order", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_List_is_null", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.SeqAssert_isSortedAccordingTo_Test", "name": "should_fail_when_comparator_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_when_Either_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_pass_if_Either_is_left", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.EitherAssert_isLeft_Test", "name": "should_fail_if_Either_is_right", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_pass_if_Map_is_not_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_when_Map_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.MapAssert_isNotEmpty_Test", "name": "should_fail_if_Map_is_empty", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_pass_when_Lazy_is_not_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.LazyAssert_isNotEvaluated_Test", "name": "should_fail_when_Lazy_is_evaluated", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_pass_if_successful_try_contains_expected_value", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_if_successful_try_does_not_contain_expected_value", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "org.assertj.vavr.api.TryAssert_contains_usingValueComparator_Test", "name": "should_fail_when_try_is_null", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}], "workflow": {"path": "/tmp/bccab3d6-a845-47ee-8a88-dccb58014a85/.github/workflows/build-crawler.yml", "type": "maven"}, "workflow_name": "b77294f9-0aab-4951-8891-b69f92abf58c", "build_tool": "maven", "elapsed_time": 73.05408120155334, "default_actions": false}]], "strategy": "PASS_PASS", "issues": [{"id": 188, "title": "Fix: use custom element comparator when provided for SeqAssertions", "body": "fixes Seq assertions like `containsExactlyInAnyOrder` and makes assertj-vavr in line with assertj-core.", "comments": ["@mchmielarz we are hitting the issue that this fix is for. when are you planning to release a new version of `assertj-vavr`? ", "Hi @reikje! I've been really busy the last few months, however, will prepare and make the release asap.", "@mchmielarz thanks a million. no rush - really happy this is getting attention .."], "labels": [], "is_pull_request": true, "review_comments": []}]}
