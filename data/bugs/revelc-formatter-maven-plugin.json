{"repository": "revelc/formatter-maven-plugin", "language": "java", "clone_url": "https://github.com/revelc/formatter-maven-plugin.git", "collection_timestamp": "2023-11-23T13:32:37.604329Z", "commit_hash": "3e9843d2ab9946bcc3ce9930c033e6651affc312", "commit_message": "[css] Add empty new line at end of file\n", "commit_timestamp": "2023-01-27T03:50:07Z", "previous_commit_hash": "a6994326aabd92963c25bfe2062ce346cf620ad5", "previous_commit_message": "Merge pull request #683 from hazendaz/main\n\nAlign usage better with maven slf4j usage, bump few versions", "previous_commit_timestamp": "2023-01-16T21:42:08Z", "time_to_patch": "10 days, 6:07:59", "bug_patch": "diff --git a/src/main/java/net/revelc/code/formatter/css/CssFormatter.java b/src/main/java/net/revelc/code/formatter/css/CssFormatter.java\nindex 1115835..f73773d 100644\n--- a/src/main/java/net/revelc/code/formatter/css/CssFormatter.java\n+++ b/src/main/java/net/revelc/code/formatter/css/CssFormatter.java\n@@ -60,6 +60,12 @@ public class CssFormatter extends AbstractCacheableFormatter implements Formatte\n         // Patch converted 'tab' back to '\\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.\n         formattedCode = formattedCode.replace(\"\\t;\", \"\\\\9;\");\n \n+        // Adding new line at end of file when needed\n+        String[] lines = formattedCode.split(ending.getChars());\n+        if (!lines[lines.length - 1].equals(ending.getChars())) {\n+            formattedCode = formattedCode + ending.getChars();\n+        }\n+\n         if (code.equals(formattedCode)) {\n             return null;\n         }\n", "bug_patch_file_extensions": ["java"], "test_patch": "diff --git a/src/test/java/net/revelc/code/formatter/css/CssFormatterTest.java b/src/test/java/net/revelc/code/formatter/css/CssFormatterTest.java\nindex 79f9b32..6c0d2c7 100644\n--- a/src/test/java/net/revelc/code/formatter/css/CssFormatterTest.java\n+++ b/src/test/java/net/revelc/code/formatter/css/CssFormatterTest.java\n@@ -36,8 +36,8 @@ class CssFormatterTest extends AbstractFormatterTest {\n     void testDoFormatFile() throws Exception {\n         // FIXME Handle linux vs windows since this formatter does not accept line endings\n         final var expectedHash = LineEnding.LF.isSystem()\n-                ? \"1af0032669532658f137ff80186df756abcfbccbe84e9663b54ef70be2c641f5af9e8c16ceeb3da7df9dc02599a3da0c0139a9397f93e383d6e8c6c50fd65c53\"\n-                : \"684255d79eb28c6f4cfa340b6930fe1cfd9de16a1c6abf5f54e8f6837694b599101ef247ed00b8aea5460aa64cda60b418cebefd8ea28d5e747ed9cf4c3a9274\";\n+                ? \"6434062bd7499e707dea1ea17d301556712222b7671fae79ec20d906cda467a2b2210896a196dbaa9da7d221f04cab87a6b2e5538ca3c46fa7fdbedb46010a8c\"\n+                : \"488b10041890a552141edb844a7d98f04ec2f30291a774dcb7f5fedcaad87dac85d3d9ed43b02f4d8d266e96549acd234038cff6e16b32a57034609f16330c8b\";\n         final var lineEnding = LineEnding.LF.isSystem() ? LineEnding.LF : LineEnding.CRLF;\n         this.twoPassTest(Collections.emptyMap(), new CssFormatter(), \"someFile.css\", expectedHash, lineEnding);\n     }\n", "test_patch_file_extensions": ["java"], "non_code_patch": "", "non_code_patch_file_extensions": [], "change_type": "SOURCE_ONLY", "actions_runs": [[{"failed": false, "tests": [{"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testDoFormatFile", "time": 0.525, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.css with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.css with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_crlf", "time": 0.036, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_lf", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_none_auto", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_cr", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_lf", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_auto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testNormalJson", "time": 0.184, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFileWithConfig", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testMultipleJson", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testIsInitialized", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileWithExclusions", "time": 0.887, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassExclusionLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassExclusionLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCR", "time": 0.066, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutput/AnyClassCR.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutputrepeat/AnyClassCR.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedLF", "time": 0.025, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCRLF", "time": 0.017, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutput/AnyClassCRLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutputrepeat/AnyClassCRLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFile", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClass.java with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClass.java with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config", "time": 0.077, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": "SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n"}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config2", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_success_read_config", "time": 0.01, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testIsIntialized", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testDoFormatFile", "time": 0.129, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyJS.js with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyJS.js with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testIsIntialized", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testDoFormatFile", "time": 0.269, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.html with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.html with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.TimeUtilTest", "name": "testPrintDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testIsIntialized", "time": 0.003, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testDoFormatFile", "time": 0.048, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.xml with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.xml with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}], "workflow": {"path": "/tmp/4ff3a9ac-b401-4b66-8d01-8ca57655b554/.github/workflows/maven-crawler.yaml", "type": "maven"}, "workflow_name": "971867ec-720b-4cd7-ae22-64b20dc8444c", "build_tool": "maven", "elapsed_time": 140.61330938339233, "default_actions": false}], [{"failed": false, "tests": [{"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testDoFormatFile", "time": 0.406, "results": [{"result": "Failure", "message": "expected: <6434062bd7499e707dea1ea17d301556712222b7671fae79ec20d906cda467a2b2210896a196dbaa9da7d221f04cab87a6b2e5538ca3c46fa7fdbedb46010a8c> but was: <1af0032669532658f137ff80186df756abcfbccbe84e9663b54ef70be2c641f5af9e8c16ceeb3da7df9dc02599a3da0c0139a9397f93e383d6e8c6c50fd65c53>", "type": "org.opentest4j.AssertionFailedError"}], "stdout": "[debug] Processing file: target/testoutput/someFile.css with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_crlf", "time": 0.03, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_lf", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_none_auto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_cr", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_lf", "time": 0.0, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_auto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testNormalJson", "time": 0.238, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFileWithConfig", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testMultipleJson", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFile", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testIsInitialized", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileWithExclusions", "time": 0.751, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassExclusionLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassExclusionLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCR", "time": 0.055, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutput/AnyClassCR.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutputrepeat/AnyClassCR.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedLF", "time": 0.022, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCRLF", "time": 0.015, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutput/AnyClassCRLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutputrepeat/AnyClassCRLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFile", "time": 0.013, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClass.java with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClass.java with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config", "time": 0.096, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": "SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n"}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config2", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_success_read_config", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testIsIntialized", "time": 0.008, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testDoFormatFile", "time": 0.179, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyJS.js with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyJS.js with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testIsIntialized", "time": 0.016, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testDoFormatFile", "time": 0.238, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.html with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.html with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.TimeUtilTest", "name": "testPrintDuration", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testDoFormatFile", "time": 0.046, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.xml with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.xml with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}], "workflow": {"path": "/tmp/4ff3a9ac-b401-4b66-8d01-8ca57655b554/.github/workflows/maven-crawler.yaml", "type": "maven"}, "workflow_name": "4e3dd301-19b3-41df-9aa1-88ee36e7ccf9", "build_tool": "maven", "elapsed_time": 131.1935248374939, "default_actions": false}], [{"failed": false, "tests": [{"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testIsIntialized", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.css.CssFormatterTest", "name": "testDoFormatFile", "time": 0.639, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.css with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.css with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_crlf", "time": 0.027, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_lf", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_none_auto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_cr", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_lf", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.LineEndingTest", "name": "test_success_read_line_endings_mixed_auto", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testNormalJson", "time": 0.191, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFileWithConfig", "time": 0.005, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testMultipleJson", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testDoFormatFile", "time": 0.004, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.json with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.json with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.json.JsonFormatterTest", "name": "testIsInitialized", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileWithExclusions", "time": 0.644, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassExclusionLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassExclusionLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassExclusionLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testIsIntialized", "time": 0.001, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCR", "time": 0.044, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutput/AnyClassCR.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCR.java with line ending: KEEP\n[debug] Determined line ending: CR to keep for file: target/testoutputrepeat/AnyClassCR.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedLF", "time": 0.023, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutput/AnyClassLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassLF.java with line ending: KEEP\n[debug] Determined line ending: LF to keep for file: target/testoutputrepeat/AnyClassLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFileKeepLineFeedCRLF", "time": 0.014, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutput/AnyClassCRLF.java\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClassCRLF.java with line ending: KEEP\n[debug] Determined line ending: CRLF to keep for file: target/testoutputrepeat/AnyClassCRLF.java\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Equal code. Not writing result to file.\n", "stderr": null}, {"classname": "net.revelc.code.formatter.java.JavaFormatterTest", "name": "testDoFormatFile", "time": 0.012, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyClass.java with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyClass.java with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config", "time": 0.083, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": "SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n"}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_read_invalid_config2", "time": 0.007, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.model.ConfigReaderTest", "name": "test_success_read_config", "time": 0.011, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testIsIntialized", "time": 0.009, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.javascript.JavascriptFormatterTest", "name": "testDoFormatFile", "time": 0.139, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/AnyJS.js with line ending: LF\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/AnyJS.js with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testIsIntialized", "time": 0.019, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.html.HTMLFormatterTest", "name": "testDoFormatFile", "time": 0.241, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.html with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.html with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}, {"classname": "net.revelc.code.formatter.TimeUtilTest", "name": "testPrintDuration", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testIsIntialized", "time": 0.002, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": null, "stderr": null}, {"classname": "net.revelc.code.formatter.xml.XMLFormatterTest", "name": "testDoFormatFile", "time": 0.043, "results": [{"result": "Passed", "message": "", "type": ""}], "stdout": "[debug] Processing file: target/testoutput/someFile.xml with line ending: LF\n[debug] Formatted but line endings not supported by tooling. Try to fix line endings.\n[debug] Line endings fixed\n[debug] Processing file: target/testoutputrepeat/someFile.xml with line ending: LF\n[debug] Nothing formatted. Try to fix line endings.\n[debug] Line endings fixed\n", "stderr": null}], "workflow": {"path": "/tmp/4ff3a9ac-b401-4b66-8d01-8ca57655b554/.github/workflows/maven-crawler.yaml", "type": "maven"}, "workflow_name": "d2c48e0e-686a-44c2-9b5c-bb46b299769f", "build_tool": "maven", "elapsed_time": 128.7802596092224, "default_actions": false}]], "strategy": "PASS_PASS", "issues": []}
